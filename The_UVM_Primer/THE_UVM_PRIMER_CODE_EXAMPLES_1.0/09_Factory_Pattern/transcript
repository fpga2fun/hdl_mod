# //  ModelSim SE-64 2019.2 Apr 17 2019
# //
# //  Copyright 1991-2019 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim SE-64 and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
do .run.do
# Cannot open macro file: .run.do
do run.do
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 17:12:41 on Dec 18,2023
# vlog -reportprogress 300 -f sv.f 
# -- Compiling package factory_sv_unit
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 17:12:41 on Dec 18,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -c -voptargs=""+acc"" top 
# Start time: 17:12:41 on Dec 18,2023
# ** Note: (vsim-3812) Design is being optimized...
# Loading sv_std.std
# Loading work.factory_sv_unit(fast)
# Loading work.top(fast)
# The lion, Mustafa, says Roar
# -- Lions --
# Animals in cage:
# Mustafa
# Simba
# -- Chickens --
# Animals in cage:
# Clucker
# Boomer
quit -sim
# End time: 17:28:44 on Dec 18,2023, Elapsed time: 0:16:03
# Errors: 219, Warnings: 0
cd ../10_An_Object_Oriented_Testbench
ls
# .DS_Store  tb.f            tinyalu_dut         top.sv  
# dut.f      tb_classes      tinyalu_macros.svh          
# run.do     tinyalu_bfm.sv  tinyalu_pkg.sv              
do run.do
# Model Technology ModelSim SE-64 vcom 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 17:28:59 on Dec 18,2023
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 17:29:00 on Dec 18,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 17:29:00 on Dec 18,2023
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 17:29:00 on Dec 18,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vopt 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 17:29:00 on Dec 18,2023
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package tinyalu_pkg
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# -- Loading interface tinyalu_bfm
# Optimizing 7 design-units (inlining 0/2 module instances, 0/3 architecture instances):
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# Optimized design name is top_optimized
# End time: 17:29:00 on Dec 18,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim top_optimized -coverage 
# Start time: 17:29:00 on Dec 18,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading work.tinyalu_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# 1
# 8d xor_op 12 = 009f
# 76 add_op ed = 0163
# c6 mul_op aa = 837c
# ff  no_op 8f = 0163
# e8 and_op 5c = 0048
# 65  no_op ff = 0048
# 00 and_op 00 = 0000
# 96 and_op ff = 0096
# ff  no_op ff = 0096
# ae  no_op cf = 0096
# ** Note: $stop    : tb_classes/tester.svh(73)
#    Time: 671 ns  Iteration: 0  Region: /tinyalu_pkg::testbench::execute
# Break in Task tinyalu_pkg/tester::execute at tb_classes/tester.svh line 73
do run.do
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib.qdb".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qdb".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qpg".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qtl".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib5_0.qdb".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib5_0.qpg".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib5_0.qtl".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work".
# Model Technology ModelSim SE-64 vcom 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:26:18 on Dec 19,2023
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 11:26:18 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:26:18 on Dec 19,2023
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 11:26:19 on Dec 19,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vopt 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:26:19 on Dec 19,2023
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib.qdb".
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qdb".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qpg".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qtl".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib5_0.qdb".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib5_0.qpg".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib5_0.qtl".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-133) Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized".
# Result too large. (errno = ERANGE)
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package tinyalu_pkg
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# -- Loading interface tinyalu_bfm
# Optimizing 7 design-units (inlining 0/2 module instances, 0/3 architecture instances):
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# Optimized design name is top_optimized
# End time: 11:26:19 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 8
# End time: 11:26:26 on Dec 19,2023, Elapsed time: 17:57:26
# Errors: 668, Warnings: 0
# vsim top_optimized -coverage 
# Start time: 11:26:27 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading work.tinyalu_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# 1
# 8d xor_op 12 = 009f
# 76 add_op ed = 0163
# c6 mul_op aa = 837c
# ff  no_op 8f = 0163
# e8 and_op 5c = 0048
# 65  no_op ff = 0048
# 00 and_op 00 = 0000
# 96 and_op ff = 0096
# ff  no_op ff = 0096
# ae  no_op cf = 0096
# ca xor_op 00 = 00ca
# 41 and_op 00 = 0000
# eb  no_op c6 = 0000
# 00 rst_op 0b = 0000
# 4f add_op ff = 014e
# 15 and_op d9 = 0011
# 00 and_op ff = 0000
# 00 rst_op ff = 0000
# 00 rst_op ff = 0000
# d0 add_op ff = 01cf
# 0c add_op c8 = 00d4
# 12 rst_op 6d = 00d4
# ff add_op ff = 01fe
# 00  no_op ff = 01fe
# ff add_op 58 = 0157
# 9c rst_op 26 = 0157
# ff xor_op ff = 0000
# ff xor_op 00 = 00ff
# ff rst_op 5a = 00ff
# da add_op b5 = 018f
# 44 rst_op 00 = 018f
# ff and_op dc = 00dc
# c3 and_op 4e = 0042
# b6 rst_op 00 = 0042
# 00 add_op 00 = 0000
# 00 xor_op db = 00db
# 6d  no_op ca = 00db
# 46 rst_op 00 = 00db
# b4 rst_op 00 = 00db
# c7  no_op 08 = 0000
# 29 mul_op 00 = 0000
# 3d rst_op 70 = 0000
# 5e xor_op d5 = 008b
# 37 and_op c0 = 0000
# 7d rst_op 00 = 0000
# 00 rst_op db = 0000
# fa rst_op 17 = 0000
# 50 add_op 35 = 0085
# c5 add_op 00 = 00c5
# ff xor_op 00 = 00ff
# a8 and_op a1 = 00a0
# 9f rst_op 2a = 00a0
# 38  no_op c8 = 0000
# ff and_op ff = 00ff
# ba rst_op 00 = 00ff
# b4 add_op ff = 01b3
# f2 rst_op bd = 01b3
# 00 mul_op a9 = 0000
# fb add_op ff = 01fa
# 36 rst_op 8f = 01fa
# 00 xor_op 9b = 009b
# 00 and_op 4b = 0000
# 0d and_op 00 = 0000
# 86  no_op 3b = 0000
# ff  no_op 5b = 0000
# 00 and_op ff = 0000
# b8  no_op e5 = 0000
# ff add_op c8 = 01c7
# 1f rst_op 00 = 01c7
# 14  no_op 96 = 0000
# ed add_op ff = 01ec
# 27  no_op 00 = 01ec
# ff rst_op 49 = 01ec
# 51 xor_op 2a = 007b
# 83 and_op 00 = 0000
# 68 and_op ff = 0068
# 00 rst_op 00 = 0068
# 00  no_op c5 = 0000
# 00  no_op b0 = 0000
# 62 mul_op e1 = 5622
# ff rst_op 86 = 5622
# 8d  no_op 07 = 0000
# 00 mul_op 3b = 0000
# ff rst_op 5c = 0000
# 00  no_op 00 = 0000
# 00 and_op 0d = 0000
# 9e xor_op 7b = 00e5
# ff rst_op ff = 00e5
# 44  no_op e0 = 0000
# f8  no_op 52 = 0000
# 8c mul_op 00 = 0000
# 84 rst_op 7c = 0000
# 8b  no_op 25 = 0000
# 49 and_op 00 = 0000
# ff  no_op 00 = 0000
# 39 rst_op 00 = 0000
# 00  no_op 00 = 0000
# 11 rst_op 00 = 0000
# ff xor_op 00 = 00ff
# 00 xor_op 39 = 0039
# ** Note: $stop    : tb_classes/tester.svh(73)
#    Time: 3820 ns  Iteration: 1  Region: /tinyalu_pkg::testbench::execute
# Break in Task tinyalu_pkg/tester::execute at tb_classes/tester.svh line 73
do run.do
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib.qdb".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qpg".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qtl".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work".
# Model Technology ModelSim SE-64 vcom 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:27:54 on Dec 19,2023
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 11:27:54 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:27:55 on Dec 19,2023
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 11:27:55 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vopt 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:27:55 on Dec 19,2023
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib.qdb".
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qpg".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qtl".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-133) Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized".
# Result too large. (errno = ERANGE)
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package tinyalu_pkg
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# -- Loading interface tinyalu_bfm
# Optimizing 7 design-units (inlining 0/2 module instances, 0/3 architecture instances):
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# Optimized design name is top_optimized
# End time: 11:27:55 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 4
# doVOpenFlatFile(): INTERNAL ERROR: page load failed for file D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/vopt7cw3k2 (0:0 3:3 17 0 4505 1702956379 0x10b:0x101)
# End time: 11:28:00 on Dec 19,2023, Elapsed time: 0:01:33
# Errors: 406, Warnings: 0
# vsim top_optimized -coverage 
# Start time: 11:28:01 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading work.tinyalu_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# 1
# 8d xor_op 12 = 009f
# 76 add_op ed = 0163
# c6 mul_op aa = 837c
# ff  no_op 8f = 0163
# e8 and_op 5c = 0048
# 65  no_op ff = 0048
# 00 and_op 00 = 0000
# 96 and_op ff = 0096
# ff  no_op ff = 0096
# ae  no_op cf = 0096
# ca xor_op 00 = 00ca
# 41 and_op 00 = 0000
# eb  no_op c6 = 0000
# 00 rst_op 0b = 0000
# 4f add_op ff = 014e
# 15 and_op d9 = 0011
# 00 and_op ff = 0000
# 00 rst_op ff = 0000
# 00 rst_op ff = 0000
# d0 add_op ff = 01cf
# ** Note: $stop    : tb_classes/tester.svh(73)
#    Time: 1020 ns  Iteration: 1  Region: /tinyalu_pkg::testbench::execute
# Break in Task tinyalu_pkg/tester::execute at tb_classes/tester.svh line 73
do run.do
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib.qdb".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qpg".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qtl".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work".
# Model Technology ModelSim SE-64 vcom 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:28:53 on Dec 19,2023
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 11:28:53 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:28:53 on Dec 19,2023
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 11:28:53 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vopt 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:28:53 on Dec 19,2023
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib.qdb".
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qpg".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib3_0.qtl".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-133) Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized".
# Result too large. (errno = ERANGE)
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package tinyalu_pkg
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# -- Loading interface tinyalu_bfm
# Optimizing 7 design-units (inlining 0/2 module instances, 0/3 architecture instances):
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# Optimized design name is top_optimized
# End time: 11:28:54 on Dec 19,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 4
# End time: 11:28:59 on Dec 19,2023, Elapsed time: 0:00:58
# Errors: 411, Warnings: 0
# vsim top_optimized -coverage 
# Start time: 11:29:00 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading work.tinyalu_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# 1
# 8d xor_op 12 = 009f
# 76 add_op ed = 0163
# c6 mul_op aa = 837c
# ff  no_op 8f = 0163
# e8 and_op 5c = 0048
# 65  no_op ff = 0048
# 00 and_op 00 = 0000
# 96 and_op ff = 0096
# ff  no_op ff = 0096
# ae  no_op cf = 0096
# ** Note: $stop    : tb_classes/tester.svh(73)
#    Time: 671 ns  Iteration: 0  Region: /tinyalu_pkg::testbench::execute
# Break in Task tinyalu_pkg/tester::execute at tb_classes/tester.svh line 73
do run.do
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib.qdb".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work".
# Model Technology ModelSim SE-64 vcom 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:29:24 on Dec 19,2023
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 11:29:24 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:29:25 on Dec 19,2023
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 11:29:25 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vopt 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:29:25 on Dec 19,2023
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib.qdb".
# ** Warning: (vopt-133) Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized".
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package tinyalu_pkg
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# -- Loading interface tinyalu_bfm
# Optimizing 7 design-units (inlining 0/2 module instances, 0/3 architecture instances):
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# Optimized design name is top_optimized
# End time: 11:29:25 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
# End time: 11:29:29 on Dec 19,2023, Elapsed time: 0:00:29
# Errors: 416, Warnings: 0
# vsim top_optimized -coverage 
# Start time: 11:29:30 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading work.tinyalu_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# 1
# 8d xor_op 12 = 009f
# 76 add_op ed = 0163
# c6 mul_op aa = 837c
# ff  no_op 8f = 0163
# e8 and_op 5c = 0048
# 65  no_op ff = 0048
# 00 and_op 00 = 0000
# 96 and_op ff = 0096
# ff  no_op ff = 0096
# ae  no_op cf = 0096
# ca xor_op 00 = 00ca
# 41 and_op 00 = 0000
# eb  no_op c6 = 0000
# 00 rst_op 0b = 0000
# 4f add_op ff = 014e
# 15 and_op d9 = 0011
# 00 and_op ff = 0000
# 00 rst_op ff = 0000
# 00 rst_op ff = 0000
# d0 add_op ff = 01cf
# 0c add_op c8 = 00d4
# 12 rst_op 6d = 00d4
# ff add_op ff = 01fe
# 00  no_op ff = 01fe
# ff add_op 58 = 0157
# 9c rst_op 26 = 0157
# ff xor_op ff = 0000
# ff xor_op 00 = 00ff
# ff rst_op 5a = 00ff
# da add_op b5 = 018f
# 44 rst_op 00 = 018f
# ff and_op dc = 00dc
# c3 and_op 4e = 0042
# b6 rst_op 00 = 0042
# 00 add_op 00 = 0000
# 00 xor_op db = 00db
# 6d  no_op ca = 00db
# 46 rst_op 00 = 00db
# b4 rst_op 00 = 00db
# c7  no_op 08 = 0000
# 29 mul_op 00 = 0000
# 3d rst_op 70 = 0000
# 5e xor_op d5 = 008b
# 37 and_op c0 = 0000
# 7d rst_op 00 = 0000
# 00 rst_op db = 0000
# fa rst_op 17 = 0000
# 50 add_op 35 = 0085
# c5 add_op 00 = 00c5
# ff xor_op 00 = 00ff
# a8 and_op a1 = 00a0
# 9f rst_op 2a = 00a0
# 38  no_op c8 = 0000
# ff and_op ff = 00ff
# ba rst_op 00 = 00ff
# b4 add_op ff = 01b3
# f2 rst_op bd = 01b3
# 00 mul_op a9 = 0000
# fb add_op ff = 01fa
# 36 rst_op 8f = 01fa
# 00 xor_op 9b = 009b
# 00 and_op 4b = 0000
# 0d and_op 00 = 0000
# 86  no_op 3b = 0000
# ff  no_op 5b = 0000
# 00 and_op ff = 0000
# b8  no_op e5 = 0000
# ff add_op c8 = 01c7
# 1f rst_op 00 = 01c7
# 14  no_op 96 = 0000
# ed add_op ff = 01ec
# 27  no_op 00 = 01ec
# ff rst_op 49 = 01ec
# 51 xor_op 2a = 007b
# 83 and_op 00 = 0000
# 68 and_op ff = 0068
# 00 rst_op 00 = 0068
# 00  no_op c5 = 0000
# 00  no_op b0 = 0000
# 62 mul_op e1 = 5622
# ff rst_op 86 = 5622
# 8d  no_op 07 = 0000
# 00 mul_op 3b = 0000
# ff rst_op 5c = 0000
# 00  no_op 00 = 0000
# 00 and_op 0d = 0000
# 9e xor_op 7b = 00e5
# ff rst_op ff = 00e5
# 44  no_op e0 = 0000
# f8  no_op 52 = 0000
# 8c mul_op 00 = 0000
# 84 rst_op 7c = 0000
# 8b  no_op 25 = 0000
# 49 and_op 00 = 0000
# ff  no_op 00 = 0000
# 39 rst_op 00 = 0000
# 00  no_op 00 = 0000
# 11 rst_op 00 = 0000
# ff xor_op 00 = 00ff
# 00 xor_op 39 = 0039
# 00 rst_op ff = 0039
# 00  no_op 49 = 0000
# 00 add_op 00 = 0000
# ff xor_op c8 = 0037
# 84  no_op ff = 0037
# 52 add_op d0 = 0122
# ff rst_op ff = 0122
# ff rst_op 00 = 0122
# 0c rst_op c5 = 0122
# 00 rst_op 69 = 0122
# d8 rst_op ff = 0122
# 00 mul_op ff = 0000
# 00 rst_op ff = 0000
# 00  no_op ff = 0000
# 8b rst_op db = 0000
# c5  no_op 00 = 0000
# af rst_op f8 = 0000
# ff rst_op 95 = 0000
# 00 rst_op 28 = 0000
# e1 mul_op ff = e01f
# d5 rst_op 00 = e01f
# 0f  no_op 7d = 0000
# 3c rst_op ef = 0000
# ff xor_op b9 = 0046
# ff xor_op 51 = 00ae
# 3a rst_op 62 = 00ae
# 7d mul_op e5 = 6fd1
# 41  no_op ff = 0000
# 70 xor_op a2 = 00d2
# dc  no_op 00 = 00d2
# 78 xor_op 5c = 0024
# c8 xor_op ff = 0037
# ff rst_op 00 = 0037
# 00 rst_op b9 = 0037
# 00 xor_op 0c = 000c
# 15 add_op 4e = 0063
# 00 and_op 00 = 0000
# ff  no_op 00 = 0000
# 4c  no_op ff = 0000
# 0d  no_op 00 = 0000
# bc  no_op 00 = 0000
# 00  no_op 4d = 0000
# 5d  no_op 00 = 0000
# 00 and_op 00 = 0000
# 46 rst_op ff = 0000
# b7 xor_op 63 = 00d4
# 68 add_op 90 = 00f8
# 00 and_op ab = 0000
# ff  no_op 00 = 0000
# 8b  no_op 00 = 0000
# 00 mul_op a5 = 0000
# ff rst_op 00 = 0000
# 00 mul_op 9a = 0000
# aa  no_op c3 = 0000
# 00 and_op c3 = 0000
# 00 xor_op 89 = 0089
# ff rst_op 68 = 0089
# ff  no_op ff = 0000
# 00 xor_op 82 = 0082
# ff mul_op 32 = 31ce
# 00 add_op aa = 00aa
# 8c  no_op fb = 00aa
# 00 mul_op ff = 0000
# ff add_op 89 = 0188
# ff rst_op 00 = 0188
# 82 xor_op 71 = 00f3
# f1 rst_op 05 = 00f3
# 00 mul_op 00 = 0000
# 37 and_op ff = 0037
# 3e rst_op 00 = 0037
# 00 mul_op 12 = 0000
# fe  no_op f3 = 0000
# ff xor_op ff = 0000
# 00 rst_op a6 = 0000
# ff mul_op ff = fe01
# 00 mul_op e1 = 0000
# c9  no_op 00 = 0000
# 00 rst_op ff = 0000
# ff  no_op dc = 0000
# 00  no_op 00 = 0000
# 00 xor_op 53 = 0053
# ff  no_op ff = 0053
# 70 and_op ff = 0070
# 0c add_op 15 = 0021
# 00  no_op 00 = 0021
# ff  no_op ff = 0021
# 00  no_op 00 = 0021
# ff rst_op ff = 0021
# 00 xor_op c9 = 00c9
# ce rst_op ff = 00c9
# ff mul_op 00 = 0000
# 1a  no_op 00 = 0000
# 00 and_op 00 = 0000
# 00 xor_op ea = 00ea
# 00 rst_op ff = 00ea
# 00  no_op ff = 0000
# 51  no_op ff = 0000
# b0 xor_op ff = 004f
# 00 rst_op 00 = 004f
# 61  no_op 55 = 0000
# ff rst_op d3 = 0000
# 58  no_op c3 = 0000
# 00 mul_op d6 = 0000
# ff rst_op 00 = 0000
# ff and_op 77 = 0077
# f8  no_op 6c = 0077
# 9c  no_op 00 = 0077
# 69 rst_op de = 0077
# 28  no_op 9a = 0000
# fb xor_op ff = 0004
# 00 and_op 9e = 0000
# ff add_op ff = 01fe
# 00 add_op 7e = 007e
# 49 mul_op ff = 48b7
# ff mul_op ff = fe01
# 77 add_op e6 = 015d
# 00 rst_op fc = 015d
# 00 xor_op ff = 00ff
# ff and_op a0 = 00a0
# 00 rst_op ff = 00a0
# df and_op 00 = 0000
# 00 rst_op bd = 0000
# 00 xor_op 00 = 0000
# ff add_op 00 = 00ff
# ff  no_op 2f = 00ff
# bc mul_op a7 = 7aa4
# 00 add_op 69 = 0069
# ff and_op e8 = 00e8
# 37 xor_op f8 = 00cf
# 22  no_op 00 = 00cf
# 1e and_op eb = 000a
# 5e xor_op 00 = 005e
# ff  no_op 37 = 005e
# ce xor_op d5 = 001b
# 00  no_op 00 = 001b
# e3 mul_op 00 = 0000
# 5c xor_op ec = 00b0
# ff rst_op 00 = 00b0
# ff xor_op ff = 0000
# 00 xor_op ff = 00ff
# 6a rst_op 18 = 00ff
# 2e rst_op 66 = 00ff
# 8f rst_op 7b = 00ff
# ff mul_op c9 = c837
# ad mul_op ff = ac53
# 00  no_op ff = 0000
# 00 add_op 00 = 0000
# ca add_op ff = 01c9
# 00 add_op 00 = 0000
# 00 add_op ac = 00ac
# ff add_op 0d = 010c
# ff add_op 2f = 012e
# ff rst_op 5d = 012e
# ff mul_op 00 = 0000
# e9 xor_op 8d = 0064
# a0 rst_op ff = 0064
# 00  no_op d1 = 0000
# ff xor_op 58 = 00a7
# ff rst_op 29 = 00a7
# ff mul_op 4d = 4cb3
# ff xor_op b9 = 0046
# 81  no_op 8f = 0046
# 0f rst_op ff = 0046
# 9a add_op 00 = 009a
# ff add_op d8 = 01d7
# 25  no_op 56 = 01d7
# ff mul_op 00 = 0000
# 00 mul_op 00 = 0000
# d1  no_op 00 = 01d7
# 00 and_op 00 = 0000
# 51 mul_op 45 = 15d5
# 80 xor_op 00 = 0080
# 31  no_op ff = 0080
# ff xor_op 00 = 00ff
# f1 mul_op 9e = 94be
# 0a  no_op ff = 00ff
# 25 add_op 00 = 0025
# 2f  no_op ff = 0025
# 00 rst_op 00 = 0025
# 00 and_op 6f = 0000
# ff add_op 72 = 0171
# ff and_op cb = 00cb
# cb  no_op 71 = 00cb
# b5 rst_op 00 = 00cb
# ff and_op 00 = 0000
# 05 mul_op b8 = 0398
# 8d  no_op f1 = 0000
# 34 mul_op ff = 33cc
# 5e  no_op 00 = 0000
# 00 rst_op 00 = 0000
# 9b  no_op 6b = 0000
# ff xor_op d9 = 0026
# 00 and_op ff = 0000
# ff  no_op 05 = 0000
# 00 add_op ff = 00ff
# ff  no_op 57 = 00ff
# ff rst_op 00 = 00ff
# ff  no_op 66 = 0000
# ff rst_op 00 = 0000
# 00 mul_op 50 = 0000
# 6a  no_op 00 = 0000
# 00 rst_op ff = 0000
# 00 add_op 1e = 001e
# d6  no_op a9 = 001e
# 40 rst_op f5 = 001e
# 25 and_op ff = 0025
# 9f mul_op 00 = 0000
# 85 add_op ff = 0184
# 34  no_op 51 = 0184
# 00 xor_op b4 = 00b4
# ff rst_op ec = 00b4
# c0 rst_op ff = 00b4
# ff mul_op 84 = 837c
# ff add_op ff = 01fe
# 00 mul_op 5d = 0000
# 00 rst_op ff = 0000
# 5d  no_op 76 = 0000
# ff xor_op 00 = 00ff
# 00  no_op cd = 00ff
# a9 and_op dd = 0089
# ff  no_op ff = 0089
# b3 add_op ff = 01b2
# fc  no_op ff = 01b2
# 75  no_op 0d = 01b2
# 00 rst_op 00 = 01b2
# ff rst_op 68 = 01b2
# ff and_op a6 = 00a6
# ff xor_op b1 = 004e
# f6 mul_op 00 = 0000
# ff mul_op 3e = 3dc2
# 3d rst_op 00 = 3dc2
# 00 and_op ff = 0000
# 00  no_op 00 = 0000
# ff add_op d7 = 01d6
# 4a xor_op 41 = 000b
# 71  no_op 00 = 000b
# 00 xor_op fe = 00fe
# 00 rst_op d3 = 00fe
# f9  no_op 00 = 0000
# 00  no_op ff = 0000
# 67  no_op 00 = 0000
# cf  no_op f2 = 0000
# 00 mul_op 00 = 0000
# 00 rst_op cb = 0000
# 00 rst_op 00 = 0000
# 00 add_op 21 = 0021
# ff  no_op ff = 0021
# 00 rst_op 20 = 0021
# 2d and_op 07 = 0005
# 00  no_op 00 = 0005
# ff rst_op ff = 0005
# ff and_op 71 = 0071
# 00 mul_op f2 = 0000
# 00 mul_op 00 = 0000
# 00 and_op 00 = 0000
# 81 rst_op cb = 0000
# f5 rst_op 46 = 0000
# 93 xor_op 00 = 0093
# 72 mul_op b5 = 509a
# 00 xor_op ff = 00ff
# 57 add_op b4 = 010b
# ff  no_op 72 = 010b
# cd rst_op d7 = 010b
# 96 xor_op 87 = 0011
# 00  no_op 22 = 0011
# ff xor_op b0 = 004f
# 00 add_op 00 = 0000
# 9d and_op 00 = 0000
# 0c rst_op 00 = 0000
# 4f mul_op 00 = 0000
# 00 xor_op bd = 00bd
# ff  no_op ff = 00bd
# 0b  no_op 8f = 00bd
# 7b rst_op c5 = 00bd
# ca rst_op ff = 00bd
# 1a  no_op ff = 0000
# 13 and_op 1d = 0011
# 8e rst_op f7 = 0011
# fe rst_op a7 = 0011
# 59 mul_op 8d = 3105
# ff  no_op ff = 0000
# ff mul_op ff = fe01
# ff  no_op 00 = 0000
# ff rst_op 00 = 0000
# ff rst_op 00 = 0000
# 72 rst_op 00 = 0000
# 00 mul_op ff = 0000
# ff xor_op 00 = 00ff
# e4 mul_op ae = 9af8
# 00 add_op 0d = 000d
# 00 rst_op 00 = 000d
# 37 add_op ff = 0136
# 5e rst_op 1b = 0136
# 5b  no_op 00 = 0000
# 7c  no_op f1 = 0000
# ff add_op 6f = 016e
# ff and_op 00 = 0000
# 00  no_op ff = 0000
# 67 rst_op d8 = 0000
# ab rst_op 00 = 0000
# 00 rst_op b1 = 0000
# 00 rst_op ff = 0000
# 3b and_op 62 = 0022
# ff mul_op 00 = 0000
# a0 rst_op 37 = 0000
# df add_op 83 = 0162
# 00 rst_op ff = 0162
# 00  no_op 3b = 0000
# 00 rst_op 8d = 0000
# 4b mul_op 00 = 0000
# 4c rst_op ff = 0000
# ac rst_op b7 = 0000
# d3 add_op 00 = 00d3
# 75 xor_op 2a = 005f
# 00 and_op ff = 0000
# ff  no_op f3 = 0000
# 00 and_op 00 = 0000
# 80 and_op eb = 0080
# 00 rst_op ff = 0080
# 00  no_op ff = 0000
# ff  no_op 00 = 0000
# dc rst_op 22 = 0000
# 00 and_op ff = 0000
# ff rst_op 96 = 0000
# 00 add_op 00 = 0000
# 02 add_op a1 = 00a3
# e4  no_op 44 = 00a3
# 00 mul_op dc = 0000
# 60 rst_op ff = 0000
# ce rst_op 2c = 0000
# 2a mul_op 4b = 0c4e
# 09 rst_op ff = 0c4e
# ff xor_op 00 = 00ff
# 0a rst_op e2 = 00ff
# 00  no_op 2d = 0000
# ff add_op ff = 01fe
# ff mul_op 00 = 0000
# ff rst_op ff = 0000
# 00 mul_op ff = 0000
# 51 add_op 54 = 00a5
# f3 mul_op 00 = 0000
# ff mul_op 00 = 0000
# 49 xor_op ae = 00e7
# ff  no_op 07 = 00e7
# ff xor_op ff = 0000
# 8f rst_op ff = 0000
# ff rst_op 00 = 0000
# c9 add_op 8a = 0153
# 8f and_op 00 = 0000
# ff  no_op c9 = 0000
# ff and_op c7 = 00c7
# b6  no_op 00 = 00c7
# a4 and_op 00 = 0000
# ff xor_op c1 = 003e
# 8f rst_op ff = 003e
# ff add_op 00 = 00ff
# 85  no_op ff = 00ff
# 00 rst_op 00 = 00ff
# ff rst_op 00 = 00ff
# 00 xor_op ff = 00ff
# 00 add_op 89 = 0089
# 0b mul_op 1c = 0134
# d5  no_op 00 = 0089
# ec rst_op 00 = 0089
# 00 rst_op ff = 0089
# 16 add_op ff = 0115
# 00 add_op 00 = 0000
# 00 add_op 00 = 0000
# 00 and_op b3 = 0000
# 00  no_op 41 = 0000
# ff  no_op d3 = 0000
# ff rst_op ff = 0000
# 00 xor_op ff = 00ff
# 00 and_op ff = 0000
# ff rst_op 00 = 0000
# ff  no_op 00 = 0000
# ff mul_op 34 = 33cc
# 00 rst_op 00 = 33cc
# ff xor_op ff = 0000
# 00 mul_op ff = 0000
# ff mul_op eb = ea15
# 76  no_op 00 = 0000
# 00  no_op 00 = 0000
# 3f xor_op ff = 00c0
# 00 add_op 65 = 0065
# b2 add_op 00 = 00b2
# 00 rst_op 4e = 00b2
# 86 add_op 52 = 00d8
# ff and_op 20 = 0020
# 8e mul_op 00 = 0000
# ff and_op ff = 00ff
# ff rst_op 00 = 00ff
# 00 xor_op 00 = 0000
# 7b and_op 7d = 0079
# 2b  no_op c4 = 0079
# ff mul_op da = d926
# 00 add_op ff = 00ff
# e1 mul_op 69 = 5c49
# 00 and_op 20 = 0000
# 00 xor_op 00 = 0000
# da  no_op 81 = 0000
# aa rst_op 3b = 0000
# ff rst_op ed = 0000
# 76  no_op 3f = 0000
# 47 rst_op b3 = 0000
# ff and_op ff = 00ff
# 30 rst_op ff = 00ff
# 00  no_op 00 = 0000
# ab rst_op 00 = 0000
# ff rst_op aa = 0000
# ** Note: $stop    : tb_classes/tester.svh(73)
#    Time: 20651 ns  Iteration: 0  Region: /tinyalu_pkg::testbench::execute
# Break in Task tinyalu_pkg/tester::execute at tb_classes/tester.svh line 73
do run.do
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib.qdb".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work".
# Model Technology ModelSim SE-64 vcom 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:30:11 on Dec 19,2023
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 11:30:11 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:30:11 on Dec 19,2023
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 11:30:11 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vopt 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 11:30:11 on Dec 19,2023
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized/_lib.qdb".
# ** Warning: (vopt-133) Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/10_An_Object_Oriented_Testbench/work/top_optimized".
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package tinyalu_pkg
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# -- Loading interface tinyalu_bfm
# Optimizing 7 design-units (inlining 0/2 module instances, 0/3 architecture instances):
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# Optimized design name is top_optimized
# End time: 11:30:11 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
# End time: 11:30:16 on Dec 19,2023, Elapsed time: 0:00:46
# Errors: 411, Warnings: 0
# vsim top_optimized -coverage 
# Start time: 11:30:17 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading work.tinyalu_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# 1
# 8d xor_op 12 = 009f
# 76 add_op ed = 0163
# c6 mul_op aa = 837c
# ff  no_op 8f = 0163
# e8 and_op 5c = 0048
# 65  no_op ff = 0048
# 00 and_op 00 = 0000
# 96 and_op ff = 0096
# ff  no_op ff = 0096
# ae  no_op cf = 0096
# ca xor_op 00 = 00ca
# 41 and_op 00 = 0000
# eb  no_op c6 = 0000
# 00 rst_op 0b = 0000
# 4f add_op ff = 014e
# 15 and_op d9 = 0011
# 00 and_op ff = 0000
# 00 rst_op ff = 0000
# 00 rst_op ff = 0000
# d0 add_op ff = 01cf
# 0c add_op c8 = 00d4
# 12 rst_op 6d = 00d4
# ff add_op ff = 01fe
# 00  no_op ff = 01fe
# ff add_op 58 = 0157
# 9c rst_op 26 = 0157
# ff xor_op ff = 0000
# ff xor_op 00 = 00ff
# ff rst_op 5a = 00ff
# da add_op b5 = 018f
# 44 rst_op 00 = 018f
# ff and_op dc = 00dc
# c3 and_op 4e = 0042
# b6 rst_op 00 = 0042
# 00 add_op 00 = 0000
# 00 xor_op db = 00db
# 6d  no_op ca = 00db
# 46 rst_op 00 = 00db
# b4 rst_op 00 = 00db
# c7  no_op 08 = 0000
# 29 mul_op 00 = 0000
# 3d rst_op 70 = 0000
# 5e xor_op d5 = 008b
# 37 and_op c0 = 0000
# 7d rst_op 00 = 0000
# 00 rst_op db = 0000
# fa rst_op 17 = 0000
# 50 add_op 35 = 0085
# c5 add_op 00 = 00c5
# ff xor_op 00 = 00ff
# a8 and_op a1 = 00a0
# 9f rst_op 2a = 00a0
# 38  no_op c8 = 0000
# ff and_op ff = 00ff
# ba rst_op 00 = 00ff
# b4 add_op ff = 01b3
# f2 rst_op bd = 01b3
# 00 mul_op a9 = 0000
# fb add_op ff = 01fa
# 36 rst_op 8f = 01fa
# 00 xor_op 9b = 009b
# 00 and_op 4b = 0000
# 0d and_op 00 = 0000
# 86  no_op 3b = 0000
# ff  no_op 5b = 0000
# 00 and_op ff = 0000
# b8  no_op e5 = 0000
# ff add_op c8 = 01c7
# 1f rst_op 00 = 01c7
# 14  no_op 96 = 0000
# ed add_op ff = 01ec
# 27  no_op 00 = 01ec
# ff rst_op 49 = 01ec
# 51 xor_op 2a = 007b
# 83 and_op 00 = 0000
# 68 and_op ff = 0068
# 00 rst_op 00 = 0068
# 00  no_op c5 = 0000
# 00  no_op b0 = 0000
# 62 mul_op e1 = 5622
# ff rst_op 86 = 5622
# 8d  no_op 07 = 0000
# 00 mul_op 3b = 0000
# ff rst_op 5c = 0000
# 00  no_op 00 = 0000
# 00 and_op 0d = 0000
# 9e xor_op 7b = 00e5
# ff rst_op ff = 00e5
# 44  no_op e0 = 0000
# f8  no_op 52 = 0000
# 8c mul_op 00 = 0000
# 84 rst_op 7c = 0000
# 8b  no_op 25 = 0000
# 49 and_op 00 = 0000
# ff  no_op 00 = 0000
# 39 rst_op 00 = 0000
# 00  no_op 00 = 0000
# 11 rst_op 00 = 0000
# ff xor_op 00 = 00ff
# 00 xor_op 39 = 0039
# 00 rst_op ff = 0039
# 00  no_op 49 = 0000
# 00 add_op 00 = 0000
# ff xor_op c8 = 0037
# 84  no_op ff = 0037
# 52 add_op d0 = 0122
# ff rst_op ff = 0122
# ff rst_op 00 = 0122
# 0c rst_op c5 = 0122
# 00 rst_op 69 = 0122
# d8 rst_op ff = 0122
# 00 mul_op ff = 0000
# 00 rst_op ff = 0000
# 00  no_op ff = 0000
# 8b rst_op db = 0000
# c5  no_op 00 = 0000
# af rst_op f8 = 0000
# ff rst_op 95 = 0000
# 00 rst_op 28 = 0000
# e1 mul_op ff = e01f
# d5 rst_op 00 = e01f
# 0f  no_op 7d = 0000
# 3c rst_op ef = 0000
# ff xor_op b9 = 0046
# ff xor_op 51 = 00ae
# 3a rst_op 62 = 00ae
# 7d mul_op e5 = 6fd1
# 41  no_op ff = 0000
# 70 xor_op a2 = 00d2
# dc  no_op 00 = 00d2
# 78 xor_op 5c = 0024
# c8 xor_op ff = 0037
# ff rst_op 00 = 0037
# 00 rst_op b9 = 0037
# 00 xor_op 0c = 000c
# 15 add_op 4e = 0063
# 00 and_op 00 = 0000
# ff  no_op 00 = 0000
# 4c  no_op ff = 0000
# 0d  no_op 00 = 0000
# bc  no_op 00 = 0000
# 00  no_op 4d = 0000
# 5d  no_op 00 = 0000
# 00 and_op 00 = 0000
# 46 rst_op ff = 0000
# b7 xor_op 63 = 00d4
# 68 add_op 90 = 00f8
# 00 and_op ab = 0000
# ff  no_op 00 = 0000
# 8b  no_op 00 = 0000
# 00 mul_op a5 = 0000
# ff rst_op 00 = 0000
# 00 mul_op 9a = 0000
# aa  no_op c3 = 0000
# 00 and_op c3 = 0000
# 00 xor_op 89 = 0089
# ff rst_op 68 = 0089
# ff  no_op ff = 0000
# 00 xor_op 82 = 0082
# ff mul_op 32 = 31ce
# 00 add_op aa = 00aa
# 8c  no_op fb = 00aa
# 00 mul_op ff = 0000
# ff add_op 89 = 0188
# ff rst_op 00 = 0188
# 82 xor_op 71 = 00f3
# f1 rst_op 05 = 00f3
# 00 mul_op 00 = 0000
# 37 and_op ff = 0037
# 3e rst_op 00 = 0037
# 00 mul_op 12 = 0000
# fe  no_op f3 = 0000
# ff xor_op ff = 0000
# 00 rst_op a6 = 0000
# ff mul_op ff = fe01
# 00 mul_op e1 = 0000
# c9  no_op 00 = 0000
# 00 rst_op ff = 0000
# ff  no_op dc = 0000
# 00  no_op 00 = 0000
# 00 xor_op 53 = 0053
# ff  no_op ff = 0053
# 70 and_op ff = 0070
# 0c add_op 15 = 0021
# 00  no_op 00 = 0021
# ff  no_op ff = 0021
# 00  no_op 00 = 0021
# ff rst_op ff = 0021
# 00 xor_op c9 = 00c9
# ce rst_op ff = 00c9
# ff mul_op 00 = 0000
# 1a  no_op 00 = 0000
# 00 and_op 00 = 0000
# 00 xor_op ea = 00ea
# 00 rst_op ff = 00ea
# 00  no_op ff = 0000
# 51  no_op ff = 0000
# b0 xor_op ff = 004f
# 00 rst_op 00 = 004f
# 61  no_op 55 = 0000
# ff rst_op d3 = 0000
# 58  no_op c3 = 0000
# 00 mul_op d6 = 0000
# ff rst_op 00 = 0000
# ff and_op 77 = 0077
# f8  no_op 6c = 0077
# 9c  no_op 00 = 0077
# 69 rst_op de = 0077
# 28  no_op 9a = 0000
# fb xor_op ff = 0004
# 00 and_op 9e = 0000
# ff add_op ff = 01fe
# 00 add_op 7e = 007e
# 49 mul_op ff = 48b7
# ff mul_op ff = fe01
# 77 add_op e6 = 015d
# 00 rst_op fc = 015d
# 00 xor_op ff = 00ff
# ff and_op a0 = 00a0
# 00 rst_op ff = 00a0
# df and_op 00 = 0000
# 00 rst_op bd = 0000
# 00 xor_op 00 = 0000
# ff add_op 00 = 00ff
# ff  no_op 2f = 00ff
# bc mul_op a7 = 7aa4
# 00 add_op 69 = 0069
# ff and_op e8 = 00e8
# 37 xor_op f8 = 00cf
# 22  no_op 00 = 00cf
# 1e and_op eb = 000a
# 5e xor_op 00 = 005e
# ff  no_op 37 = 005e
# ce xor_op d5 = 001b
# 00  no_op 00 = 001b
# e3 mul_op 00 = 0000
# 5c xor_op ec = 00b0
# ff rst_op 00 = 00b0
# ff xor_op ff = 0000
# 00 xor_op ff = 00ff
# 6a rst_op 18 = 00ff
# 2e rst_op 66 = 00ff
# 8f rst_op 7b = 00ff
# ff mul_op c9 = c837
# ad mul_op ff = ac53
# 00  no_op ff = 0000
# 00 add_op 00 = 0000
# ca add_op ff = 01c9
# 00 add_op 00 = 0000
# 00 add_op ac = 00ac
# ff add_op 0d = 010c
# ff add_op 2f = 012e
# ff rst_op 5d = 012e
# ff mul_op 00 = 0000
# e9 xor_op 8d = 0064
# a0 rst_op ff = 0064
# 00  no_op d1 = 0000
# ff xor_op 58 = 00a7
# ff rst_op 29 = 00a7
# ff mul_op 4d = 4cb3
# ff xor_op b9 = 0046
# 81  no_op 8f = 0046
# 0f rst_op ff = 0046
# 9a add_op 00 = 009a
# ff add_op d8 = 01d7
# 25  no_op 56 = 01d7
# ff mul_op 00 = 0000
# 00 mul_op 00 = 0000
# d1  no_op 00 = 01d7
# 00 and_op 00 = 0000
# 51 mul_op 45 = 15d5
# 80 xor_op 00 = 0080
# 31  no_op ff = 0080
# ff xor_op 00 = 00ff
# f1 mul_op 9e = 94be
# 0a  no_op ff = 00ff
# 25 add_op 00 = 0025
# 2f  no_op ff = 0025
# 00 rst_op 00 = 0025
# 00 and_op 6f = 0000
# ff add_op 72 = 0171
# ff and_op cb = 00cb
# cb  no_op 71 = 00cb
# b5 rst_op 00 = 00cb
# ff and_op 00 = 0000
# 05 mul_op b8 = 0398
# 8d  no_op f1 = 0000
# 34 mul_op ff = 33cc
# 5e  no_op 00 = 0000
# 00 rst_op 00 = 0000
# 9b  no_op 6b = 0000
# ff xor_op d9 = 0026
# 00 and_op ff = 0000
# ff  no_op 05 = 0000
# 00 add_op ff = 00ff
# ff  no_op 57 = 00ff
# ff rst_op 00 = 00ff
# ff  no_op 66 = 0000
# ff rst_op 00 = 0000
# 00 mul_op 50 = 0000
# 6a  no_op 00 = 0000
# 00 rst_op ff = 0000
# 00 add_op 1e = 001e
# d6  no_op a9 = 001e
# 40 rst_op f5 = 001e
# 25 and_op ff = 0025
# 9f mul_op 00 = 0000
# 85 add_op ff = 0184
# 34  no_op 51 = 0184
# 00 xor_op b4 = 00b4
# ff rst_op ec = 00b4
# c0 rst_op ff = 00b4
# ff mul_op 84 = 837c
# ff add_op ff = 01fe
# 00 mul_op 5d = 0000
# 00 rst_op ff = 0000
# 5d  no_op 76 = 0000
# ff xor_op 00 = 00ff
# 00  no_op cd = 00ff
# a9 and_op dd = 0089
# ff  no_op ff = 0089
# b3 add_op ff = 01b2
# fc  no_op ff = 01b2
# 75  no_op 0d = 01b2
# 00 rst_op 00 = 01b2
# ff rst_op 68 = 01b2
# ff and_op a6 = 00a6
# ff xor_op b1 = 004e
# f6 mul_op 00 = 0000
# ff mul_op 3e = 3dc2
# 3d rst_op 00 = 3dc2
# 00 and_op ff = 0000
# 00  no_op 00 = 0000
# ff add_op d7 = 01d6
# 4a xor_op 41 = 000b
# 71  no_op 00 = 000b
# 00 xor_op fe = 00fe
# 00 rst_op d3 = 00fe
# f9  no_op 00 = 0000
# 00  no_op ff = 0000
# 67  no_op 00 = 0000
# cf  no_op f2 = 0000
# 00 mul_op 00 = 0000
# 00 rst_op cb = 0000
# 00 rst_op 00 = 0000
# 00 add_op 21 = 0021
# ff  no_op ff = 0021
# 00 rst_op 20 = 0021
# 2d and_op 07 = 0005
# 00  no_op 00 = 0005
# ff rst_op ff = 0005
# ff and_op 71 = 0071
# 00 mul_op f2 = 0000
# 00 mul_op 00 = 0000
# 00 and_op 00 = 0000
# 81 rst_op cb = 0000
# f5 rst_op 46 = 0000
# 93 xor_op 00 = 0093
# 72 mul_op b5 = 509a
# 00 xor_op ff = 00ff
# 57 add_op b4 = 010b
# ff  no_op 72 = 010b
# cd rst_op d7 = 010b
# 96 xor_op 87 = 0011
# 00  no_op 22 = 0011
# ff xor_op b0 = 004f
# 00 add_op 00 = 0000
# 9d and_op 00 = 0000
# 0c rst_op 00 = 0000
# 4f mul_op 00 = 0000
# 00 xor_op bd = 00bd
# ff  no_op ff = 00bd
# 0b  no_op 8f = 00bd
# 7b rst_op c5 = 00bd
# ca rst_op ff = 00bd
# 1a  no_op ff = 0000
# 13 and_op 1d = 0011
# 8e rst_op f7 = 0011
# fe rst_op a7 = 0011
# 59 mul_op 8d = 3105
# ff  no_op ff = 0000
# ff mul_op ff = fe01
# ff  no_op 00 = 0000
# ff rst_op 00 = 0000
# ff rst_op 00 = 0000
# 72 rst_op 00 = 0000
# 00 mul_op ff = 0000
# ff xor_op 00 = 00ff
# e4 mul_op ae = 9af8
# 00 add_op 0d = 000d
# 00 rst_op 00 = 000d
# 37 add_op ff = 0136
# 5e rst_op 1b = 0136
# 5b  no_op 00 = 0000
# 7c  no_op f1 = 0000
# ff add_op 6f = 016e
# ff and_op 00 = 0000
# 00  no_op ff = 0000
# 67 rst_op d8 = 0000
# ab rst_op 00 = 0000
# 00 rst_op b1 = 0000
# 00 rst_op ff = 0000
# 3b and_op 62 = 0022
# ff mul_op 00 = 0000
# a0 rst_op 37 = 0000
# df add_op 83 = 0162
# 00 rst_op ff = 0162
# 00  no_op 3b = 0000
# 00 rst_op 8d = 0000
# 4b mul_op 00 = 0000
# 4c rst_op ff = 0000
# ac rst_op b7 = 0000
# d3 add_op 00 = 00d3
# 75 xor_op 2a = 005f
# 00 and_op ff = 0000
# ff  no_op f3 = 0000
# 00 and_op 00 = 0000
# 80 and_op eb = 0080
# 00 rst_op ff = 0080
# 00  no_op ff = 0000
# ff  no_op 00 = 0000
# dc rst_op 22 = 0000
# 00 and_op ff = 0000
# ff rst_op 96 = 0000
# 00 add_op 00 = 0000
# 02 add_op a1 = 00a3
# e4  no_op 44 = 00a3
# 00 mul_op dc = 0000
# 60 rst_op ff = 0000
# ce rst_op 2c = 0000
# 2a mul_op 4b = 0c4e
# 09 rst_op ff = 0c4e
# ff xor_op 00 = 00ff
# 0a rst_op e2 = 00ff
# 00  no_op 2d = 0000
# ff add_op ff = 01fe
# ff mul_op 00 = 0000
# ff rst_op ff = 0000
# 00 mul_op ff = 0000
# 51 add_op 54 = 00a5
# f3 mul_op 00 = 0000
# ff mul_op 00 = 0000
# 49 xor_op ae = 00e7
# ff  no_op 07 = 00e7
# ff xor_op ff = 0000
# 8f rst_op ff = 0000
# ff rst_op 00 = 0000
# c9 add_op 8a = 0153
# 8f and_op 00 = 0000
# ff  no_op c9 = 0000
# ff and_op c7 = 00c7
# b6  no_op 00 = 00c7
# a4 and_op 00 = 0000
# ff xor_op c1 = 003e
# 8f rst_op ff = 003e
# ff add_op 00 = 00ff
# 85  no_op ff = 00ff
# 00 rst_op 00 = 00ff
# ff rst_op 00 = 00ff
# 00 xor_op ff = 00ff
# 00 add_op 89 = 0089
# 0b mul_op 1c = 0134
# d5  no_op 00 = 0089
# ec rst_op 00 = 0089
# 00 rst_op ff = 0089
# 16 add_op ff = 0115
# 00 add_op 00 = 0000
# 00 add_op 00 = 0000
# 00 and_op b3 = 0000
# 00  no_op 41 = 0000
# ff  no_op d3 = 0000
# ff rst_op ff = 0000
# 00 xor_op ff = 00ff
# 00 and_op ff = 0000
# ff rst_op 00 = 0000
# ff  no_op 00 = 0000
# ff mul_op 34 = 33cc
# 00 rst_op 00 = 33cc
# ff xor_op ff = 0000
# 00 mul_op ff = 0000
# ff mul_op eb = ea15
# 76  no_op 00 = 0000
# 00  no_op 00 = 0000
# 3f xor_op ff = 00c0
# 00 add_op 65 = 0065
# b2 add_op 00 = 00b2
# 00 rst_op 4e = 00b2
# 86 add_op 52 = 00d8
# ff and_op 20 = 0020
# 8e mul_op 00 = 0000
# ff and_op ff = 00ff
# ff rst_op 00 = 00ff
# 00 xor_op 00 = 0000
# 7b and_op 7d = 0079
# 2b  no_op c4 = 0079
# ff mul_op da = d926
# 00 add_op ff = 00ff
# e1 mul_op 69 = 5c49
# 00 and_op 20 = 0000
# 00 xor_op 00 = 0000
# da  no_op 81 = 0000
# aa rst_op 3b = 0000
# ff rst_op ed = 0000
# 76  no_op 3f = 0000
# 47 rst_op b3 = 0000
# ff and_op ff = 00ff
# 30 rst_op ff = 00ff
# 00  no_op 00 = 0000
# ab rst_op 00 = 0000
# ff rst_op aa = 0000
# 00  no_op 60 = 0000
# 42  no_op 41 = 0000
# a4 rst_op 00 = 0000
# a3  no_op fd = 0000
# 59 add_op ff = 0158
# 2c rst_op dd = 0158
# 38  no_op 00 = 0000
# ff add_op 7d = 017c
# 0d add_op a3 = 00b0
# e2  no_op 00 = 00b0
# 0b and_op 00 = 0000
# 00  no_op 45 = 0000
# 88 add_op 00 = 0088
# 68  no_op d2 = 0088
# 08 mul_op 5a = 02d0
# a4 rst_op 50 = 02d0
# ff  no_op ff = 0000
# 1c xor_op 47 = 005b
# 8a rst_op 00 = 005b
# d2 rst_op ff = 005b
# 2c mul_op 00 = 0000
# 00  no_op 00 = 0000
# 00 rst_op ff = 0000
# 27  no_op 6c = 0000
# af and_op d3 = 0083
# 39 rst_op 00 = 0083
# f1 rst_op f8 = 0083
# d5 rst_op 96 = 0083
# ff add_op ff = 01fe
# 54 xor_op 00 = 0054
# 9f mul_op ff = 9e61
# ff mul_op ff = fe01
# 1c and_op ac = 000c
# 90  no_op 00 = 000c
# 00 and_op 94 = 0000
# e8  no_op 00 = 0000
# 32 mul_op 00 = 0000
# 00 mul_op 0b = 0000
# 00 xor_op 00 = 0000
# ff rst_op 00 = 0000
# 00 rst_op 00 = 0000
# 41 rst_op 3c = 0000
# 15 add_op ff = 0114
# da xor_op 00 = 00da
# ff and_op b5 = 00b5
# ff add_op ff = 01fe
# a8 rst_op 00 = 01fe
# 00 and_op d3 = 0000
# ff mul_op 00 = 0000
# 00 add_op 79 = 0079
# d5 and_op 00 = 0000
# ff xor_op 72 = 008d
# 00 and_op 07 = 0000
# da  no_op c5 = 0000
# 00  no_op ff = 0000
# 00 rst_op 6c = 0000
# c1  no_op 00 = 0000
# 90 rst_op 16 = 0000
# f8 xor_op af = 0057
# ce rst_op e0 = 0057
# 6f  no_op 33 = 0000
# ff rst_op 00 = 0000
# c6 rst_op a5 = 0000
# d6 mul_op 00 = 0000
# ff xor_op 00 = 00ff
# 00 rst_op 85 = 00ff
# 00  no_op 04 = 0000
# ff and_op ff = 00ff
# ff mul_op ff = fe01
# 00 rst_op 00 = fe01
# 1c xor_op b4 = 00a8
# 00 and_op 53 = 0000
# 4a mul_op ff = 49b6
# 89 add_op 65 = 00ee
# ff  no_op 9b = 00ee
# 49 add_op 5d = 00a6
# 8c mul_op 64 = 36b0
# 50  no_op ff = 00a6
# 00 xor_op 3b = 003b
# 75 xor_op ff = 008a
# f6 mul_op 19 = 1806
# ff  no_op e0 = 008a
# ff  no_op f3 = 008a
# 00 rst_op 00 = 008a
# 9a mul_op b9 = 6f4a
# 00  no_op 00 = 0000
# e0 add_op 00 = 00e0
# 5f add_op a4 = 0103
# d8 rst_op e6 = 0103
# ed rst_op 30 = 0103
# ff xor_op 2a = 00d5
# 43  no_op 00 = 00d5
# ff  no_op ff = 00d5
# c1 rst_op 28 = 00d5
# 00 add_op 38 = 0038
# 00 xor_op bf = 00bf
# 2b add_op ff = 012a
# ff rst_op bb = 012a
# 27 mul_op 00 = 0000
# a9 mul_op 89 = 5a71
# ff xor_op 58 = 00a7
# 94 rst_op b2 = 00a7
# ff xor_op c9 = 0036
# 5b and_op 6d = 0049
# ff add_op 29 = 0128
# 9a xor_op 00 = 009a
# ff  no_op 48 = 009a
# 15 rst_op 56 = 009a
# 19 and_op 90 = 0010
# 00 and_op 00 = 0000
# bf rst_op ff = 0000
# ff  no_op f1 = 0000
# 22  no_op ff = 0000
# c3 add_op ff = 01c2
# b2  no_op 8e = 01c2
# 47  no_op ff = 01c2
# 00 and_op 47 = 0000
# 00 add_op 60 = 0060
# 00 and_op 43 = 0000
# ff rst_op 62 = 0000
# 82 rst_op 19 = 0000
# 1e add_op ff = 011d
# ff add_op ff = 01fe
# ff and_op d7 = 00d7
# 00 mul_op ff = 0000
# 00 add_op ff = 00ff
# 00  no_op e8 = 00ff
# ff rst_op a8 = 00ff
# 00 rst_op 93 = 00ff
# ff rst_op 87 = 00ff
# 00 add_op b5 = 00b5
# e7 and_op 0a = 0002
# ff rst_op 00 = 0002
# ff rst_op ff = 0002
# 00  no_op cf = 0000
# c3 add_op 82 = 0145
# 00 mul_op 00 = 0000
# 6a mul_op 00 = 0000
# 00  no_op ff = 0145
# ff xor_op 8e = 0071
# 00 and_op ff = 0000
# 21 rst_op 0b = 0000
# 00 mul_op 00 = 0000
# 00  no_op 3b = 0000
# 77  no_op 39 = 0000
# fb  no_op 40 = 0000
# 00 add_op ff = 00ff
# ff mul_op 0c = 0bf4
# e8  no_op ff = 00ff
# 00  no_op 13 = 00ff
# ce  no_op 52 = 00ff
# db add_op 00 = 00db
# 20 rst_op 22 = 00db
# ff add_op 69 = 0168
# 00 xor_op c0 = 00c0
# b7 mul_op 8b = 635d
# 00 rst_op 4f = 635d
# 15  no_op ff = 0000
# ff  no_op d2 = 0000
# 00 mul_op b6 = 0000
# c8 xor_op ff = 0037
# ff  no_op ff = 0037
# 39 mul_op 00 = 0000
# 00 mul_op 6a = 0000
# 00  no_op 99 = 0037
# 00 and_op fb = 0000
# 89  no_op cc = 0000
# ff add_op 00 = 00ff
# 34 rst_op 52 = 00ff
# 9a  no_op 00 = 0000
# ff rst_op ff = 0000
# 00  no_op ff = 0000
# ff xor_op 0d = 00f2
# ff mul_op 68 = 6798
# c2 rst_op 00 = 6798
# ff  no_op ff = 0000
# 00 rst_op 05 = 0000
# 00 rst_op ff = 0000
# 02 rst_op 00 = 0000
# fb rst_op a2 = 0000
# 7a xor_op ff = 0085
# df xor_op e3 = 003c
# ff  no_op 49 = 003c
# 82 rst_op 88 = 003c
# ff and_op 4b = 004b
# e8 add_op ff = 01e7
# cb  no_op 00 = 01e7
# d6 and_op 00 = 0000
# d5 add_op c9 = 019e
# 89 rst_op ff = 019e
# 00 rst_op 00 = 019e
# 96 add_op 70 = 0106
# 00 xor_op d8 = 00d8
# ff  no_op 3b = 00d8
# ff rst_op 00 = 00d8
# 00 and_op ff = 0000
# ff rst_op 4b = 0000
# e0 rst_op ff = 0000
# 19 rst_op ff = 0000
# 00 and_op 00 = 0000
# ff  no_op 96 = 0000
# ff and_op f6 = 00f6
# 00 rst_op 71 = 00f6
# 34 xor_op 34 = 0000
# 91 xor_op 86 = 0017
# ff and_op ff = 00ff
# 00 xor_op 95 = 0095
# 00 and_op 00 = 0000
# c4 mul_op a9 = 8164
# 00  no_op 03 = 0000
# 38 mul_op ee = 3410
# ff rst_op e7 = 3410
# 6f rst_op 10 = 3410
# ff and_op 00 = 0000
# 38 xor_op dc = 00e4
# 3d  no_op fd = 00e4
# ff mul_op 0c = 0bf4
# 00 rst_op d3 = 0bf4
# 3d  no_op ac = 0000
# ff  no_op c7 = 0000
# 7e and_op 00 = 0000
# 32 xor_op 00 = 0032
# ff rst_op bd = 0032
# ff  no_op 1e = 0000
# ee  no_op 89 = 0000
# ff add_op 68 = 0167
# 8c add_op e1 = 016d
# 5f  no_op ff = 016d
# ff xor_op 00 = 00ff
# ff and_op ff = 00ff
# 3c and_op 00 = 0000
# 00 mul_op a4 = 0000
# ff  no_op 23 = 0000
# 31 xor_op ff = 00ce
# ff  no_op 0d = 00ce
# ff xor_op 3b = 00c4
# 00 mul_op 05 = 0000
# b2 xor_op ff = 004d
# c2 xor_op b8 = 007a
# 00 xor_op 00 = 0000
# 00 mul_op ff = 0000
# 77 and_op ff = 0077
# ff rst_op 34 = 0077
# 00 rst_op 91 = 0077
# ff add_op 87 = 0186
# 41 rst_op 00 = 0186
# 00 mul_op 00 = 0000
# 00 add_op 00 = 0000
# 2d and_op ff = 002d
# bc mul_op 16 = 1028
# da rst_op a5 = 1028
# ff xor_op 00 = 00ff
# 00 add_op b3 = 00b3
# 00 and_op a7 = 0000
# 00  no_op 00 = 0000
# ff  no_op 92 = 0000
# eb add_op 66 = 0151
# ff  no_op 4b = 0151
# 9c and_op 2e = 000c
# 81 add_op ff = 0180
# d1 add_op ff = 01d0
# 00 xor_op 00 = 0000
# ad add_op 00 = 00ad
# 96 xor_op 31 = 00a7
# 00 add_op 00 = 0000
# 4b rst_op 00 = 0000
# 00 xor_op 4f = 004f
# ff rst_op 00 = 004f
# d9  no_op ff = 0000
# ff mul_op ff = fe01
# cf and_op ff = 00cf
# ff add_op 00 = 00ff
# ff rst_op ff = 00ff
# dd mul_op f9 = d6f5
# e7 rst_op 77 = d6f5
# 00 rst_op ff = d6f5
# a2  no_op 3b = 0000
# 27  no_op 00 = 0000
# b0 add_op 2f = 00df
# ff  no_op 26 = 00df
# ff  no_op 00 = 00df
# 00 rst_op 2a = 00df
# 03  no_op 25 = 0000
# ff  no_op 00 = 0000
# 00  no_op 23 = 0000
# 00 rst_op cb = 0000
# ff rst_op ff = 0000
# 00 rst_op ff = 0000
# ff  no_op ef = 0000
# 00  no_op 82 = 0000
# e3 mul_op 97 = 85e5
# 00 rst_op 39 = 85e5
# 00 rst_op ff = 85e5
# ff  no_op f6 = 0000
# 7e  no_op ff = 0000
# ff rst_op ff = 0000
# 8f and_op ff = 008f
# 5e xor_op ff = 00a1
# ff add_op 43 = 0142
# ff rst_op 27 = 0142
# 2c and_op 00 = 0000
# d2  no_op e3 = 0000
# ff rst_op f9 = 0000
# 2d add_op 00 = 002d
# 00 mul_op 00 = 0000
# ff and_op ff = 00ff
# 75  no_op 3a = 00ff
# ff  no_op 60 = 00ff
# 00 mul_op 20 = 0000
# ff xor_op c7 = 0038
# ff  no_op d1 = 0038
# de and_op 5a = 005a
# ff add_op ff = 01fe
# 00 xor_op 91 = 0091
# ff  no_op ff = 0091
# 00  no_op d5 = 0091
# ff add_op 14 = 0113
# ff add_op 2c = 012b
# 00 and_op 20 = 0000
# ff add_op d9 = 01d8
# 1f xor_op ff = 00e0
# 44  no_op fa = 00e0
# ff  no_op ff = 00e0
# 51 rst_op 10 = 00e0
# d9 xor_op fa = 0023
# 6b add_op 7d = 00e8
# 9a xor_op 8c = 0016
# 00 rst_op 82 = 0016
# cd mul_op ff = cc33
# 36  no_op ff = 0000
# cb add_op 00 = 00cb
# 5d mul_op e2 = 521a
# fa and_op 5c = 0058
# 00 xor_op ff = 00ff
# 00 mul_op 00 = 0000
# 7b xor_op 84 = 00ff
# ff  no_op ff = 00ff
# ff  no_op af = 00ff
# 00  no_op 00 = 00ff
# ff xor_op ff = 0000
# dc mul_op ff = db24
# ff xor_op 9c = 0063
# 2b mul_op ff = 2ad5
# e1 xor_op ff = 001e
# ff mul_op 00 = 0000
# 00  no_op 55 = 001e
# 6a rst_op ff = 001e
# ed  no_op ff = 0000
# 00 xor_op b0 = 00b0
# 82 mul_op 00 = 0000
# 00 add_op ff = 00ff
# ff add_op 32 = 0131
# 00  no_op 5e = 0131
# 6b rst_op ff = 0131
# 00 and_op c2 = 0000
# ff add_op 00 = 00ff
# 9e add_op 00 = 009e
# ff  no_op 5a = 009e
# a5  no_op ba = 009e
# 00  no_op 5d = 009e
# ff  no_op 5e = 009e
# ff xor_op 6b = 0094
# ff and_op 4d = 004d
# 00 add_op 00 = 0000
# 89 rst_op 00 = 0000
# 00  no_op ca = 0000
# 00  no_op ff = 0000
# 96 rst_op 19 = 0000
# ed  no_op 00 = 0000
# ab rst_op 00 = 0000
# ff rst_op 0c = 0000
# ff xor_op 00 = 00ff
# ff mul_op 01 = 00ff
# 1e rst_op c5 = 00ff
# ff rst_op 70 = 00ff
# ff  no_op 00 = 0000
# 7d add_op ff = 017c
# 94 mul_op ff = 936c
# 0d xor_op 00 = 000d
# 09 rst_op 00 = 000d
# ff  no_op 59 = 0000
# ff rst_op ff = 0000
# 00 xor_op a4 = 00a4
# ff rst_op 00 = 00a4
# 00 xor_op ff = 00ff
# 11 xor_op 00 = 0011
# ff and_op 68 = 0068
# c2 and_op 9a = 0082
# bc rst_op 27 = 0082
# 00 rst_op ff = 0082
# ff add_op ff = 01fe
# 68 xor_op 00 = 0068
# dc add_op 66 = 0142
# ff  no_op 9f = 0142
# ff rst_op ff = 0142
# d7 mul_op 00 = 0000
# ff xor_op d4 = 002b
# 15 rst_op 00 = 002b
# 00 rst_op ff = 002b
# 00 add_op 00 = 0000
# 8e  no_op b3 = 0000
# 38  no_op d2 = 0000
# ff  no_op 00 = 0000
# 00  no_op ff = 0000
# 9f rst_op c6 = 0000
# d9  no_op c6 = 0000
# 58 mul_op 00 = 0000
# 00  no_op 00 = 0000
# ff and_op ff = 00ff
# 00 rst_op 54 = 00ff
# 6d and_op ff = 006d
# 34  no_op ff = 006d
# 00 rst_op e7 = 006d
# de  no_op c1 = 0000
# 04 rst_op 16 = 0000
# ff rst_op ff = 0000
# 00 mul_op ff = 0000
# 39  no_op ff = 0000
# e8  no_op 4d = 0000
# 56 rst_op 00 = 0000
# 2b  no_op c5 = 0000
# 18  no_op fa = 0000
# 4c and_op ff = 004c
# 7d  no_op ff = 004c
# 63  no_op 58 = 004c
# 15 rst_op ff = 004c
# 00 rst_op 00 = 004c
# ff rst_op c8 = 004c
# 00 mul_op 00 = 0000
# 2d and_op af = 002d
# e6  no_op 00 = 002d
# d3 mul_op 10 = 0d30
# 20  no_op 13 = 002d
# ca xor_op ed = 0027
# 45  no_op ff = 0027
# aa rst_op 54 = 0027
# b7 xor_op 00 = 00b7
# 6d  no_op 00 = 00b7
# 21 rst_op f2 = 00b7
# 00 xor_op ff = 00ff
# 4e  no_op c6 = 00ff
# 8d mul_op 59 = 3105
# a9 and_op 2f = 0029
# 00 add_op 44 = 0044
# 00 add_op ad = 00ad
# 00 rst_op 9a = 00ad
# 00  no_op 61 = 0000
# 00 rst_op 00 = 0000
# c3 mul_op a2 = 7b66
# 62 add_op a3 = 0105
# 00 and_op 3f = 0000
# ff rst_op ff = 0000
# 00  no_op 3b = 0000
# 73 mul_op 00 = 0000
# 4f  no_op 00 = 0000
# ec and_op b0 = 00a0
# 4c rst_op cc = 00a0
# 8f add_op 4d = 00dc
# 0a  no_op 11 = 00dc
# 4b add_op ff = 014a
# 53  no_op 08 = 014a
# b0 and_op c6 = 0080
# 0b add_op ff = 010a
# 00 xor_op 00 = 0000
# de  no_op b6 = 0000
# e1 rst_op ff = 0000
# ff rst_op 94 = 0000
# ff xor_op ff = 0000
# 4d add_op 47 = 0094
# ff xor_op 00 = 00ff
# 48 add_op a9 = 00f1
# 00 mul_op 00 = 0000
# 67  no_op ff = 00f1
# c0 rst_op a4 = 00f1
# ff mul_op 22 = 21de
# 45  no_op 00 = 0000
# 00 rst_op 00 = 0000
# c4 xor_op ff = 003b
# ff rst_op 00 = 003b
# 5b rst_op 00 = 003b
# ff and_op 43 = 0043
# ff rst_op ff = 0043
# ff and_op ff = 00ff
# 39  no_op 87 = 00ff
# 6d rst_op ff = 00ff
# ff xor_op 00 = 00ff
# 00 add_op ff = 00ff
# f5  no_op 00 = 00ff
# 00 mul_op 44 = 0000
# af mul_op 22 = 173e
# 00  no_op ff = 00ff
# 16 xor_op c6 = 00d0
# c5 mul_op ff = c43b
# 9f xor_op d9 = 0046
# da  no_op 26 = 0046
# 2f  no_op 6e = 0046
# a1 add_op 00 = 00a1
# 00 mul_op 82 = 0000
# 51  no_op 95 = 00a1
# 65 mul_op 76 = 2e8e
# 00  no_op 00 = 00a1
# 5b add_op dd = 0138
# 00 rst_op 1c = 0138
# 00  no_op 1a = 0000
# 00 add_op 2e = 002e
# e0 and_op ff = 00e0
# 1c rst_op 03 = 00e0
# 00 and_op 15 = 0000
# 00 rst_op ff = 0000
# ff  no_op ff = 0000
# 23 rst_op 00 = 0000
# ff rst_op ff = 0000
# d5 rst_op 40 = 0000
# f4  no_op e4 = 0000
# ff rst_op 1c = 0000
# ff mul_op ff = fe01
# c3 xor_op ff = 003c
# 00 xor_op 0f = 000f
# b2 rst_op ff = 000f
# ff mul_op ff = fe01
# 00  no_op 3d = 0000
# 00 rst_op ff = 0000
# 2d  no_op ec = 0000
# 00  no_op 87 = 0000
# 3d rst_op 39 = 0000
# ff and_op 38 = 0038
# e4 mul_op ff = e31c
# 41  no_op 4c = 0038
# ff add_op 00 = 00ff
# ff  no_op 54 = 00ff
# 00 xor_op 00 = 0000
# ff mul_op ff = fe01
# 76  no_op c9 = 0000
# e1  no_op 83 = 0000
# 00 rst_op ab = 0000
# c2  no_op e8 = 0000
# 54 rst_op 00 = 0000
# fc xor_op 90 = 006c
# 00 and_op ff = 0000
# a2 rst_op ff = 0000
# 00 rst_op 66 = 0000
# c5  no_op c6 = 0000
# 3a  no_op ff = 0000
# ff  no_op 9c = 0000
# 00  no_op eb = 0000
# a7  no_op 3e = 0000
# bd  no_op 45 = 0000
# ff and_op 90 = 0090
# 94 rst_op 00 = 0090
# e7 and_op 00 = 0000
# f7  no_op 30 = 0000
# ff and_op ff = 00ff
# 2b  no_op 39 = 00ff
# f0 rst_op ff = 00ff
# 00 rst_op ff = 00ff
# 98 and_op 23 = 0000
# 72 add_op 25 = 0097
# 00 rst_op e5 = 0097
# b7  no_op 00 = 0000
# 70 and_op ff = 0070
# 00 add_op ab = 00ab
# f4 add_op ff = 01f3
# 00  no_op ff = 01f3
# b3 add_op 52 = 0105
# 00 mul_op 00 = 0000
# 93 mul_op 9e = 5aba
# 07 and_op 2a = 0002
# 93 mul_op ff = 926d
# 48 mul_op 03 = 00d8
# 00 add_op 00 = 0000
# ff add_op ff = 01fe
# 59 rst_op ef = 01fe
# 00 add_op ff = 00ff
# 74 mul_op e5 = 67c4
# ff and_op ff = 00ff
# ff  no_op e7 = 00ff
# 00 mul_op 00 = 0000
# 0e and_op 2d = 000c
# 00 mul_op 29 = 0000
# 36 and_op ff = 0036
# ff  no_op d0 = 0036
# 00 mul_op f5 = 0000
# 00  no_op ff = 0036
# 00 add_op f6 = 00f6
# 0c rst_op ff = 00f6
# 02 xor_op 30 = 0032
# e0 rst_op 00 = 0032
# 79 mul_op 00 = 0000
# ff rst_op 44 = 0000
# ff mul_op f7 = f609
# 85 xor_op ff = 007a
# ff mul_op ff = fe01
# 00  no_op 00 = 007a
# 00 add_op ff = 00ff
# 43 rst_op 00 = 00ff
# 55 and_op ef = 0045
# 9e  no_op 00 = 0045
# 28 mul_op d0 = 2080
# 5b mul_op ad = 3d7f
# a7 rst_op db = 3d7f
# 00 rst_op ff = 3d7f
# 00 mul_op 09 = 0000
# c9 rst_op ff = 0000
# ff xor_op ff = 0000
# d8 xor_op 00 = 00d8
# 02  no_op ca = 00d8
# ff  no_op ff = 00d8
# 00  no_op ff = 00d8
# 00 xor_op ad = 00ad
# ff  no_op e4 = 00ad
# ef add_op 00 = 00ef
# 25 xor_op 00 = 0025
# a5  no_op ff = 0025
# 00  no_op ff = 0025
# 00 xor_op ff = 00ff
# 00 add_op 00 = 0000
# 2d rst_op ff = 0000
# 7a add_op ff = 0179
# 00 add_op 4a = 004a
# 4d  no_op 24 = 004a
# ff add_op ff = 01fe
# ff xor_op 5d = 00a2
# ff  no_op fe = 00a2
# 03 and_op 5e = 0002
# 00  no_op b8 = 0002
# ff rst_op 9c = 0002
# 00 xor_op 00 = 0000
# 18  no_op 00 = 0000
# ff and_op b8 = 00b8
# bf mul_op ff = be41
# 61 xor_op ff = 009e
# 6b and_op 0c = 0008
# 00 rst_op 4e = 0008
# ff add_op ff = 01fe
# cf xor_op ff = 0030
# 00 rst_op 28 = 0030
# 85 rst_op 1a = 0030
# 00 xor_op 00 = 0000
# c8 add_op 00 = 00c8
# 1d mul_op 35 = 0601
# 00  no_op 5f = 00c8
# c1 rst_op 69 = 00c8
# ff and_op ff = 00ff
# a1 and_op f2 = 00a0
# 00 add_op ff = 00ff
# 00 rst_op 00 = 00ff
# 00 add_op aa = 00aa
# 90  no_op 00 = 00aa
# 7b rst_op 00 = 00aa
# 00 rst_op 00 = 00aa
# 00 rst_op 46 = 00aa
# ba  no_op 00 = 0000
# 15 add_op 76 = 008b
# 33 and_op 93 = 0013
# 2c rst_op ff = 0013
# a6 and_op 00 = 0000
# ff add_op 3c = 013b
# f6 and_op 00 = 0000
# 3b rst_op 00 = 0000
# 00 add_op 00 = 0000
# ff mul_op 20 = 1fe0
# ff  no_op 96 = 0000
# 00 rst_op ff = 0000
# 98 rst_op 6c = 0000
# 00 mul_op 93 = 0000
# ea add_op ae = 0198
# ff and_op 00 = 0000
# c3 mul_op c6 = 96d2
# 4d mul_op ff = 4cb3
# 0d mul_op 57 = 046b
# 73 and_op ff = 0073
# 00 add_op 97 = 0097
# ff  no_op ff = 0097
# 6a and_op 6d = 0068
# 69 mul_op 30 = 13b0
# 00 rst_op ff = 13b0
# 2a rst_op 96 = 13b0
# 4d  no_op ae = 0000
# 31 mul_op 96 = 1cb6
# 70 xor_op 30 = 0040
# 0e rst_op ef = 0040
# 3a rst_op ff = 0040
# f1 rst_op 37 = 0040
# 39  no_op ff = 0000
# ff and_op 44 = 0044
# 5a rst_op 00 = 0044
# 00 rst_op b4 = 0044
# 00 rst_op 00 = 0044
# ff rst_op 24 = 0044
# ff add_op ff = 01fe
# 00 mul_op ff = 0000
# af xor_op 5c = 00f3
# 00 xor_op 95 = 0095
# ff rst_op 00 = 0095
# 00 rst_op ff = 0095
# 00  no_op ff = 0000
# 9c add_op ff = 019b
# ff and_op 30 = 0030
# 5e rst_op ff = 0030
# e2 mul_op 25 = 20aa
# c6 rst_op ce = 20aa
# cc  no_op d2 = 0000
# da rst_op cf = 0000
# 00 rst_op 66 = 0000
# ff rst_op 00 = 0000
# ff rst_op 29 = 0000
# 36  no_op 5e = 0000
# 9e and_op 4b = 000a
# 00 mul_op a6 = 0000
# 43 rst_op 1f = 0000
# a8 mul_op 85 = 5748
# ff rst_op 85 = 5748
# 2b  no_op 00 = 0000
# 94 rst_op 00 = 0000
# 00  no_op ff = 0000
# 6c mul_op 63 = 29c4
# b6  no_op 00 = 0000
# 00  no_op ff = 0000
# 85 and_op 0a = 0000
# f5 and_op ff = 00f5
# ff rst_op 00 = 00f5
# ff xor_op e6 = 0019
# f3 xor_op 00 = 00f3
# ff xor_op e9 = 0016
# 00  no_op 00 = 0016
# 55  no_op ff = 0016
# 96  no_op b6 = 0016
# 00 add_op 00 = 0000
# 00 and_op d0 = 0000
# 71 rst_op 00 = 0000
# 00  no_op ff = 0000
# ff xor_op 00 = 00ff
# ff mul_op ff = fe01
# f9 and_op 39 = 0039
# b9 xor_op e6 = 005f
# ff  no_op 00 = 005f
# 29 mul_op 00 = 0000
# 00 rst_op 74 = 0000
# ab  no_op ff = 0000
# 00  no_op ff = 0000
# 8b add_op ff = 018a
# 00  no_op 00 = 018a
# c1 and_op 00 = 0000
# 3b rst_op ff = 0000
# 76 mul_op ff = 758a
# ff xor_op ff = 0000
# ff mul_op 22 = 21de
# ff add_op ff = 01fe
# ff rst_op 24 = 01fe
# 13 mul_op ff = 12ed
# 10 add_op 71 = 0081
# 00 mul_op ff = 0000
# a3  no_op ff = 0081
# 06 mul_op ff = 05fa
# 00 add_op 89 = 0089
# 2f  no_op 34 = 0089
# ce rst_op 36 = 0089
# 00 add_op 00 = 0000
# 00 and_op ff = 0000
# 17  no_op 0c = 0000
# 00 xor_op 0a = 000a
# 00 rst_op 00 = 000a
# ff rst_op 00 = 000a
# 96 mul_op 00 = 0000
# 65  no_op e1 = 0000
# 00 add_op 23 = 0023
# 2b  no_op e8 = 0023
# 00 add_op ff = 00ff
# 5f  no_op 88 = 00ff
# 00 xor_op ff = 00ff
# ff rst_op 10 = 00ff
# 9f xor_op ff = 0060
# 00 and_op 00 = 0000
# ff  no_op 00 = 0000
# 57 xor_op ee = 00b9
# 2c add_op 5f = 008b
# 84  no_op ff = 008b
# 8e xor_op 00 = 008e
# ff rst_op 9a = 008e
# 91 rst_op c1 = 008e
# 00 rst_op 62 = 008e
# 50  no_op 7f = 0000
# 59 rst_op 6b = 0000
# ff rst_op 00 = 0000
# ff mul_op 00 = 0000
# a0  no_op 00 = 0000
# 46  no_op ff = 0000
# 06  no_op c6 = 0000
# ff rst_op 00 = 0000
# ff and_op ff = 00ff
# 25 add_op e2 = 0107
# 00 and_op ff = 0000
# cc rst_op ff = 0000
# 2f rst_op 33 = 0000
# 17 add_op 00 = 0017
# ff and_op 65 = 0065
# ff  no_op ff = 0065
# ff rst_op a7 = 0065
# ff rst_op ff = 0065
# ff add_op 00 = 00ff
# 10 rst_op 90 = 00ff
# 6b mul_op 00 = 0000
# 2b add_op ff = 012a
# ff  no_op ff = 012a
# f1  no_op e6 = 012a
# 56  no_op ff = 012a
# b4 add_op ff = 01b3
# a6 add_op b0 = 0156
# 00  no_op 00 = 0156
# 00  no_op 00 = 0156
# ff and_op ea = 00ea
# ef rst_op 00 = 00ea
# 00  no_op 5b = 0000
# bf rst_op ff = 0000
# 74 and_op a0 = 0020
# 7d  no_op ff = 0020
# 00 rst_op 0d = 0020
# e6 rst_op 90 = 0020
# ff  no_op 35 = 0000
# ff xor_op ff = 0000
# 00 add_op fd = 00fd
# 36 mul_op 00 = 0000
# 00 add_op bb = 00bb
# ff rst_op de = 00bb
# ff rst_op b7 = 00bb
# ff rst_op 09 = 00bb
# 21 rst_op 00 = 00bb
# 1f rst_op b6 = 00bb
# 85 and_op b3 = 0081
# ff mul_op fd = fc03
# 00 rst_op 00 = fc03
# db  no_op 9d = 0000
# cc rst_op 00 = 0000
# 68 rst_op 69 = 0000
# 94  no_op 73 = 0000
# ff and_op 2d = 002d
# 00  no_op c3 = 002d
# 00 add_op ff = 00ff
# ff  no_op 3f = 00ff
# a8 mul_op e0 = 9300
# b5 xor_op 26 = 0093
# 88 xor_op 5f = 00d7
# 3d rst_op 68 = 00d7
# 00 rst_op 46 = 00d7
# ff  no_op 13 = 0000
# 00 rst_op 84 = 0000
# 03  no_op 00 = 0000
# 8d  no_op 00 = 0000
# cb  no_op 2e = 0000
# ff and_op ff = 00ff
# 00 rst_op f9 = 00ff
# a5 xor_op d0 = 0075
# 7d rst_op e0 = 0075
# 75 xor_op ad = 00d8
# ff mul_op ff = fe01
# 65 add_op 3e = 00a3
# 00 xor_op 00 = 0000
# 4e and_op 00 = 0000
# 8a xor_op ac = 0026
# 79 xor_op 00 = 0079
# bb xor_op ff = 0044
# 1e  no_op ff = 0044
# e4 rst_op ff = 0044
# ff  no_op ff = 0000
# 00 xor_op e6 = 00e6
# ff xor_op 9a = 0065
# 5d  no_op 00 = 0065
# 4f  no_op 58 = 0065
# ff rst_op ff = 0065
# 08 add_op ff = 0107
# b6 xor_op ff = 0049
# 00  no_op ff = 0049
# c8 mul_op 00 = 0000
# 4a mul_op ff = 49b6
# ff add_op 58 = 0157
# 81 xor_op 3b = 00ba
# 25 and_op 29 = 0021
# ff add_op 00 = 00ff
# ff rst_op 44 = 00ff
# ff  no_op 00 = 0000
# ff add_op 00 = 00ff
# ff add_op ab = 01aa
# f5 xor_op 00 = 00f5
# 00 rst_op 00 = 00f5
# ff and_op 00 = 0000
# 00 and_op 51 = 0000
# 00 and_op c1 = 0000
# ff  no_op 00 = 0000
# ff rst_op ff = 0000
# ff mul_op 00 = 0000
# ff xor_op 5f = 00a0
# 40  no_op 97 = 00a0
# 26  no_op 00 = 00a0
# c0 rst_op d0 = 00a0
# ff rst_op 33 = 00a0
# f3 rst_op fd = 00a0
# 91 xor_op 00 = 0091
# ff rst_op 21 = 0091
# ff rst_op 00 = 0091
# 36  no_op ff = 0000
# ff add_op e1 = 01e0
# 00 mul_op 00 = 0000
# c9  no_op fe = 01e0
# 6a mul_op d3 = 575e
# 00 mul_op 00 = 0000
# ee and_op aa = 00aa
# ff xor_op ff = 0000
# 26 rst_op 00 = 0000
# 6f rst_op ff = 0000
# 00 rst_op ff = 0000
# 00 and_op 9f = 0000
# ff  no_op cb = 0000
# ff rst_op 00 = 0000
# 98  no_op ff = 0000
# 5c rst_op 53 = 0000
# fc and_op 66 = 0064
# ff  no_op ff = 0064
# 00 add_op ff = 00ff
# fb rst_op ff = 00ff
# 81 mul_op 00 = 0000
# a2  no_op ff = 0000
# bf mul_op fe = bd82
# 2f add_op 98 = 00c7
# ff  no_op 9b = 00c7
# ff rst_op 00 = 00c7
# 00 rst_op 1b = 00c7
# 51 and_op ed = 0041
# 4e xor_op 00 = 004e
# 83 and_op c0 = 0080
# ff  no_op e9 = 0080
# 24  no_op ff = 0080
# 00  no_op ff = 0080
# da rst_op ff = 0080
# 00 rst_op ff = 0080
# d3 mul_op ff = d22d
# 00  no_op 51 = 0000
# e8  no_op ff = 0000
# ff  no_op d7 = 0000
# 00 and_op ff = 0000
# 8f  no_op ff = 0000
# 62 rst_op 65 = 0000
# 43  no_op ee = 0000
# ff xor_op ff = 0000
# 27  no_op d9 = 0000
# 00 xor_op ff = 00ff
# ab xor_op f7 = 005c
# ff  no_op 00 = 005c
# 00 and_op 3b = 0000
# ff rst_op ff = 0000
# ff xor_op 37 = 00c8
# 63 and_op ff = 0063
# 5b mul_op 00 = 0000
# 9e xor_op 85 = 001b
# 00 and_op ff = 0000
# ff xor_op fe = 0001
# 0d xor_op 00 = 000d
# ff and_op 44 = 0044
# b0 rst_op ff = 0044
# d0  no_op 00 = 0000
# 00  no_op 25 = 0000
# 46 xor_op 00 = 0046
# ff add_op ff = 01fe
# 00 and_op 00 = 0000
# 11 and_op ff = 0011
# 0d xor_op 40 = 004d
# ff  no_op 24 = 004d
# 00 xor_op 00 = 0000
# 00 rst_op c3 = 0000
# 00 mul_op 2b = 0000
# 00  no_op 00 = 0000
# ff xor_op 53 = 00ac
# b8 mul_op ff = b748
# ac add_op 00 = 00ac
# ff  no_op 60 = 00ac
# ff xor_op f1 = 000e
# ff  no_op 51 = 000e
# 00 mul_op af = 0000
# ff  no_op ff = 000e
# 00 rst_op 13 = 000e
# ff  no_op d5 = 0000
# 00 rst_op ff = 0000
# ff and_op ff = 00ff
# f4 add_op eb = 01df
# 00 and_op 00 = 0000
# eb xor_op 6c = 0087
# 1a and_op ff = 001a
# ff mul_op 00 = 0000
# ff and_op b9 = 00b9
# 00 and_op 00 = 0000
# 00 xor_op bb = 00bb
# 49 and_op ff = 0049
# 00  no_op ff = 0049
# ff and_op 5f = 005f
# 4b add_op ff = 014a
# 00 and_op ff = 0000
# ff rst_op 89 = 0000
# 5a xor_op ff = 00a5
# 99 rst_op 00 = 00a5
# ff and_op 4a = 004a
# e4 xor_op 20 = 00c4
# ** Note: $stop    : tb_classes/tester.svh(73)
#    Time: 60820 ns  Iteration: 1  Region: /tinyalu_pkg::testbench::execute
# Break in Task tinyalu_pkg/tester::execute at tb_classes/tester.svh line 73


quit -sim
# End time: 14:38:02 on Dec 19,2023, Elapsed time: 3:07:45
# Errors: 417, Warnings: 0


cd ../11_UVM_Test
ll
# wrong # args: should be "llength list"
ls
# dut.f   tb_classes      tinyalu_macros.svh    
# run.do  tinyalu_bfm.sv  tinyalu_pkg.sv        
# tb.f    tinyalu_dut     top.sv                
ls -a
# vsim ls [options...] [files...]
#  -l                   Long listing format
#  -p                   Append indicators to the ends of names
#  -1                   List 1 file per line
#  -r                   Reverse the sort order
#  -t                   Sort by modified time
#  -d                   List directory entries instead of contents
#  --                   Forcibly stop option processing
#  -help                Print this message
#  -?                   Print this message
# 
ls -l
# -rw-rw-rw- 1 xujiang Domain Users   98 2019-12-12 21:09 dut.f
# -rw-rw-rw- 1 xujiang Domain Users  922 2019-12-12 21:09 run.do
# -rw-rw-rw- 1 xujiang Domain Users   56 2019-12-12 21:09 tb.f
# drwxrwxrwx 1 xujiang Domain Users 4096 2023-12-11 21:23 tb_classes
# -rw-rw-rw- 1 xujiang Domain Users 1972 2019-12-12 21:09 tinyalu_bfm.sv
# drwxrwxrwx 1 xujiang Domain Users    0 2023-12-11 21:23 tinyalu_dut
# -rw-rw-rw- 1 xujiang Domain Users  587 2019-12-12 21:09 tinyalu_macros.svh
# -rw-rw-rw- 1 xujiang Domain Users 1167 2019-12-12 21:09 tinyalu_pkg.sv
# -rw-rw-rw- 1 xujiang Domain Users 1044 2019-12-12 21:09 top.sv
do run.do
# Model Technology ModelSim SE-64 vcom 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 14:38:40 on Dec 19,2023
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 14:38:40 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 14:38:40 on Dec 19,2023
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# ** Note: (vlog-2286) tinyalu_pkg.sv(18): Using implicit +incdir+D:/Xilinx/modelsim/uvm-1.1d/../verilog_src/uvm-1.1d/src from import uvm_pkg
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 14:38:40 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vopt 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 14:38:41 on Dec 19,2023
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# -- Importing package tinyalu_pkg
# -- Loading interface tinyalu_bfm
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# -- Loading package mtiUvm.questa_uvm_pkg
# Optimizing 9 design-units (inlining 0/2 module instances, 0/3 architecture instances):
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# -- Optimizing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)(fast)
# -- Optimizing package mtiUvm.questa_uvm_pkg(fast)
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# Optimized design name is top_optimized
# End time: 14:38:42 on Dec 19,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vsim top_optimized -coverage "+UVM_TESTNAME=random_test" 
# Start time: 14:38:42 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
# 1
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test random_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 42800: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 42800 ns  Iteration: 54  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# coverage exclude -src ../../tinyalu_dut/single_cycle_add_and_xor.vhd -scope /top/DUT/add_and_xor -line 49 -code b
# ** Warning: (vsim-4036) The 'coverage exclude' command had no effect on some/all objects because
# no matching coverage data was found.
# 
# End time: 14:38:59 on Dec 19,2023, Elapsed time: 0:00:17
# Errors: 414, Warnings: 1
# vsim top_optimized -coverage "+UVM_TESTNAME=add_test" 
# Start time: 14:39:00 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
# 1
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test add_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 42800: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 42800 ns  Iteration: 54  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# coverage exclude -src ../../tinyalu_dut/single_cycle_add_and_xor.vhd -scope /top/DUT/add_and_xor -line 49 -code b
# ** Warning: (vsim-4036) The 'coverage exclude' command had no effect on some/all objects because
# no matching coverage data was found.
# 
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Start time: 14:39:15 on Dec 19,2023
# vcover merge tinyalu.ucdb random_test.ucdb add_test.ucdb 
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Merging file random_test.ucdb
# Merging file add_test.ucdb
# Writing merged result to tinyalu.ucdb
# 
# End time: 14:39:15 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Start time: 14:39:15 on Dec 19,2023
# vcover report tinyalu.ucdb -cvg -details 
# Coverage Report by instance with details
# 
# =================================================================================
# === Instance: /tinyalu_pkg
# === Design Unit: work.tinyalu_pkg
# =================================================================================
# 
# Covergroup Coverage:
#     Covergroups                      2        na        na   100.00%
#         Coverpoints/Crosses          5        na        na        na
#             Covergroup Bins         40        40         0   100.00%
# ----------------------------------------------------------------------------------------------------------
# Covergroup                                             Metric       Goal       Bins    Status               
#                                                                                                          
# ----------------------------------------------------------------------------------------------------------
#  TYPE /tinyalu_pkg/coverage/op_cov                    100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#  Covergroup instance \/tinyalu_pkg::coverage::op_cov  
#                                                       100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin single_cycle[no_op]                           426          1          -    Covered              
#         bin single_cycle[add_op]                          524          1          -    Covered              
#         bin single_cycle[and_op]                          452          1          -    Covered              
#         bin single_cycle[xor_op]                          516          1          -    Covered              
#         bin single_cycle[rst_op]                          936          1          -    Covered              
#         bin multi_cycle                                  1426          1          -    Covered              
#         bin opn_rst[add_op=>rst_op]                        62          1          -    Covered              
#         bin opn_rst[no_op=>rst_op]                        118          1          -    Covered              
#         bin rst_opn[rst_op=>add_op]                        60          1          -    Covered              
#         bin rst_opn[rst_op=>no_op]                        128          1          -    Covered              
#         bin sngl_mul[xor_op=>mul_op]                       38          1          -    Covered              
#         bin sngl_mul[and_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[add_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[no_op=>mul_op]                        50          1          -    Covered              
#         bin mul_sngl[mul_op=>xor_op]                       48          1          -    Covered              
#         bin mul_sngl[mul_op=>and_op]                       30          1          -    Covered              
#         bin mul_sngl[mul_op=>add_op]                       38          1          -    Covered              
#         bin mul_sngl[mul_op=>no_op]                        22          1          -    Covered              
#         bin twoops[add_op[*2]]                            308          1          -    Covered              
#         bin twoops[no_op[*2]]                             116          1          -    Covered              
#         bin manymult                                     1006          1          -    Covered              
#  TYPE /tinyalu_pkg/coverage/zeros_or_ones_on_ops      100.00%        100          -    Covered              
#     covered/total bins:                                    19         19          -                      
#     missing/total bins:                                     0         19          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint all_ops                                100.00%        100          -    Covered              
#         covered/total bins:                                 4          4          -                      
#         missing/total bins:                                 0          4          -                      
#         % Hit:                                        100.00%        100          -                      
#         ignore_bin null_ops                              1362                     -    Occurred             
#         bin auto[add_op]                                  524          1          -    Covered              
#         bin auto[and_op]                                  452          1          -    Covered              
#         bin auto[xor_op]                                  516          1          -    Covered              
#         bin auto[mul_op]                                 1426          1          -    Covered              
#     Coverpoint a_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1192          1          -    Covered              
#         bin others                                       2054          1          -    Covered              
#         bin ones                                         1034          1          -    Covered              
#     Coverpoint b_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1094          1          -    Covered              
#         bin others                                       2240          1          -    Covered              
#         bin ones                                          946          1          -    Covered              
#     Cross op_00_FF                                    100.00%        100          -    Covered              
#         covered/total bins:                                 9          9          -                      
#         missing/total bins:                                 0          9          -                      
#         % Hit:                                        100.00%        100          -                      
#         Auto, Default and User Defined Bins:
#             bin add_00                                    204          1          -    Covered              
#             bin add_FF                                    240          1          -    Covered              
#             bin and_00                                    216          1          -    Covered              
#             bin and_FF                                    188          1          -    Covered              
#             bin xor_00                                    244          1          -    Covered              
#             bin xor_FF                                    244          1          -    Covered              
#             bin mul_00                                    728          1          -    Covered              
#             bin mul_FF                                    520          1          -    Covered              
#             bin mul_max                                    64          1          -    Covered              
#         Illegal and Ignore Bins:
#             ignore_bin others_only                        698                     -    Occurred             
# 
# COVERGROUP COVERAGE:
# ----------------------------------------------------------------------------------------------------------
# Covergroup                                             Metric       Goal       Bins    Status               
#                                                                                                          
# ----------------------------------------------------------------------------------------------------------
#  TYPE /tinyalu_pkg/coverage/op_cov                    100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#  Covergroup instance \/tinyalu_pkg::coverage::op_cov  
#                                                       100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin single_cycle[no_op]                           426          1          -    Covered              
#         bin single_cycle[add_op]                          524          1          -    Covered              
#         bin single_cycle[and_op]                          452          1          -    Covered              
#         bin single_cycle[xor_op]                          516          1          -    Covered              
#         bin single_cycle[rst_op]                          936          1          -    Covered              
#         bin multi_cycle                                  1426          1          -    Covered              
#         bin opn_rst[add_op=>rst_op]                        62          1          -    Covered              
#         bin opn_rst[no_op=>rst_op]                        118          1          -    Covered              
#         bin rst_opn[rst_op=>add_op]                        60          1          -    Covered              
#         bin rst_opn[rst_op=>no_op]                        128          1          -    Covered              
#         bin sngl_mul[xor_op=>mul_op]                       38          1          -    Covered              
#         bin sngl_mul[and_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[add_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[no_op=>mul_op]                        50          1          -    Covered              
#         bin mul_sngl[mul_op=>xor_op]                       48          1          -    Covered              
#         bin mul_sngl[mul_op=>and_op]                       30          1          -    Covered              
#         bin mul_sngl[mul_op=>add_op]                       38          1          -    Covered              
#         bin mul_sngl[mul_op=>no_op]                        22          1          -    Covered              
#         bin twoops[add_op[*2]]                            308          1          -    Covered              
#         bin twoops[no_op[*2]]                             116          1          -    Covered              
#         bin manymult                                     1006          1          -    Covered              
#  TYPE /tinyalu_pkg/coverage/zeros_or_ones_on_ops      100.00%        100          -    Covered              
#     covered/total bins:                                    19         19          -                      
#     missing/total bins:                                     0         19          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint all_ops                                100.00%        100          -    Covered              
#         covered/total bins:                                 4          4          -                      
#         missing/total bins:                                 0          4          -                      
#         % Hit:                                        100.00%        100          -                      
#         ignore_bin null_ops                              1362                     -    Occurred             
#         bin auto[add_op]                                  524          1          -    Covered              
#         bin auto[and_op]                                  452          1          -    Covered              
#         bin auto[xor_op]                                  516          1          -    Covered              
#         bin auto[mul_op]                                 1426          1          -    Covered              
#     Coverpoint a_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1192          1          -    Covered              
#         bin others                                       2054          1          -    Covered              
#         bin ones                                         1034          1          -    Covered              
#     Coverpoint b_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1094          1          -    Covered              
#         bin others                                       2240          1          -    Covered              
#         bin ones                                          946          1          -    Covered              
#     Cross op_00_FF                                    100.00%        100          -    Covered              
#         covered/total bins:                                 9          9          -                      
#         missing/total bins:                                 0          9          -                      
#         % Hit:                                        100.00%        100          -                      
#         Auto, Default and User Defined Bins:
#             bin add_00                                    204          1          -    Covered              
#             bin add_FF                                    240          1          -    Covered              
#             bin and_00                                    216          1          -    Covered              
#             bin and_FF                                    188          1          -    Covered              
#             bin xor_00                                    244          1          -    Covered              
#             bin xor_FF                                    244          1          -    Covered              
#             bin mul_00                                    728          1          -    Covered              
#             bin mul_FF                                    520          1          -    Covered              
#             bin mul_max                                    64          1          -    Covered              
#         Illegal and Ignore Bins:
#             ignore_bin others_only                        698                     -    Occurred             
# 
# TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 2
# 
# Total Coverage By Instance (filtered view): 100.00%
# 
# End time: 14:39:15 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
add wave -position insertpoint  \
sim:/top/DUT/A \
sim:/top/DUT/B \
sim:/top/DUT/clk \
sim:/top/DUT/op \
sim:/top/DUT/reset_n \
sim:/top/DUT/start \
sim:/top/DUT/done \
sim:/top/DUT/result
vsim +UVM_TESTNAME=random_test top
# End time: 15:19:08 on Dec 19,2023, Elapsed time: 0:40:08
# Errors: 854, Warnings: 1
# vsim "+UVM_TESTNAME=random_test" top 
# Start time: 15:19:09 on Dec 19,2023
# ** Note: (vsim-3812) Design is being optimized...
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll

vsim +UVM_TESTNAME=add_test top
# End time: 15:20:37 on Dec 19,2023, Elapsed time: 0:01:28
# Errors: 688, Warnings: 0
# vsim "+UVM_TESTNAME=add_test" top 
# Start time: 15:20:38 on Dec 19,2023
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
vsim top_optimized -coverage +UVM_TESTNAME=add_test
# End time: 15:21:47 on Dec 19,2023, Elapsed time: 0:01:09
# Errors: 704, Warnings: 0
# vsim top_optimized -coverage "+UVM_TESTNAME=add_test" 
# Start time: 15:21:48 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
run -all
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test add_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 42800: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 42800 ns  Iteration: 54  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
add wave -position insertpoint  \
sim:/top/bfm/A \
sim:/top/bfm/B \
sim:/top/bfm/clk \
sim:/top/bfm/reset_n \
sim:/top/bfm/op \
sim:/top/bfm/start \
sim:/top/bfm/done \
sim:/top/bfm/result
add wave -position insertpoint  \
sim:/top/bfm/op_set
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run -continue
run -all
vsim top_optimized -coverage +UVM_TESTNAME=add_test
# End time: 15:24:46 on Dec 19,2023, Elapsed time: 0:02:58
# Errors: 719, Warnings: 0
# vsim top_optimized -coverage "+UVM_TESTNAME=add_test" 
# Start time: 15:24:47 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
run -all
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test add_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 42800: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 42800 ns  Iteration: 54  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
do run.do
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/11_UVM_Test/work/top_optimized/_lib.qdb".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/11_UVM_Test/work/top_optimized/_lib3_0.qdb".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/11_UVM_Test/work/top_optimized/_lib3_0.qpg".
# Error 31: Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/11_UVM_Test/work/top_optimized/_lib3_0.qtl".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/11_UVM_Test/work/top_optimized".
# Error 133: Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/11_UVM_Test/work".
# Model Technology ModelSim SE-64 vcom 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 15:26:40 on Dec 19,2023
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 15:26:40 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 15:26:40 on Dec 19,2023
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# ** Note: (vlog-2286) tinyalu_pkg.sv(18): Using implicit +incdir+D:/Xilinx/modelsim/uvm-1.1d/../verilog_src/uvm-1.1d/src from import uvm_pkg
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 15:26:40 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vopt 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 15:26:40 on Dec 19,2023
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/11_UVM_Test/work/top_optimized/_lib.qdb".
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/11_UVM_Test/work/top_optimized/_lib3_0.qpg".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-31) Unable to unlink file "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/11_UVM_Test/work/top_optimized/_lib3_0.qtl".
# 另一个程序正在使用此文件，进程无法访问。 (GetLastError() = 32)
# ** Warning: (vopt-133) Unable to remove directory "D:/Downloads/The_UVM_Primer/THE_UVM_PRIMER_CODE_EXAMPLES_1.0/11_UVM_Test/work/top_optimized".
# Result too large. (errno = ERANGE)
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# -- Importing package tinyalu_pkg
# -- Loading interface tinyalu_bfm
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# -- Loading package mtiUvm.questa_uvm_pkg
# Optimizing 9 design-units (inlining 0/2 module instances, 0/3 architecture instances):
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# -- Optimizing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)(fast)
# -- Optimizing package mtiUvm.questa_uvm_pkg(fast)
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# Optimized design name is top_optimized
# End time: 15:26:42 on Dec 19,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 4
# End time: 15:26:48 on Dec 19,2023, Elapsed time: 0:02:01
# Errors: 715, Warnings: 0
# vsim top_optimized -coverage "+UVM_TESTNAME=random_test" 
# Start time: 15:26:49 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
# 1
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test random_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 42800: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 42800 ns  Iteration: 54  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# coverage exclude -src ../../tinyalu_dut/single_cycle_add_and_xor.vhd -scope /top/DUT/add_and_xor -line 49 -code b
# ** Warning: (vsim-4036) The 'coverage exclude' command had no effect on some/all objects because
# no matching coverage data was found.
# 
# End time: 15:27:10 on Dec 19,2023, Elapsed time: 0:00:21
# Errors: 707, Warnings: 1
# vsim top_optimized -coverage "+UVM_TESTNAME=add_test" 
# Start time: 15:27:11 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
# 1
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test add_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 42800: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 42800 ns  Iteration: 54  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# coverage exclude -src ../../tinyalu_dut/single_cycle_add_and_xor.vhd -scope /top/DUT/add_and_xor -line 49 -code b
# ** Warning: (vsim-4036) The 'coverage exclude' command had no effect on some/all objects because
# no matching coverage data was found.
# 
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Start time: 15:27:29 on Dec 19,2023
# vcover merge tinyalu.ucdb random_test.ucdb add_test.ucdb 
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Merging file random_test.ucdb
# Merging file add_test.ucdb
# Writing merged result to tinyalu.ucdb
# 
# End time: 15:27:29 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Start time: 15:27:29 on Dec 19,2023
# vcover report tinyalu.ucdb -cvg -details 
# Coverage Report by instance with details
# 
# =================================================================================
# === Instance: /tinyalu_pkg
# === Design Unit: work.tinyalu_pkg
# =================================================================================
# 
# Covergroup Coverage:
#     Covergroups                      2        na        na   100.00%
#         Coverpoints/Crosses          5        na        na        na
#             Covergroup Bins         40        40         0   100.00%
# ----------------------------------------------------------------------------------------------------------
# Covergroup                                             Metric       Goal       Bins    Status               
#                                                                                                          
# ----------------------------------------------------------------------------------------------------------
#  TYPE /tinyalu_pkg/coverage/op_cov                    100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#  Covergroup instance \/tinyalu_pkg::coverage::op_cov  
#                                                       100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin single_cycle[no_op]                           426          1          -    Covered              
#         bin single_cycle[add_op]                          524          1          -    Covered              
#         bin single_cycle[and_op]                          452          1          -    Covered              
#         bin single_cycle[xor_op]                          516          1          -    Covered              
#         bin single_cycle[rst_op]                          936          1          -    Covered              
#         bin multi_cycle                                  1426          1          -    Covered              
#         bin opn_rst[add_op=>rst_op]                        62          1          -    Covered              
#         bin opn_rst[no_op=>rst_op]                        118          1          -    Covered              
#         bin rst_opn[rst_op=>add_op]                        60          1          -    Covered              
#         bin rst_opn[rst_op=>no_op]                        128          1          -    Covered              
#         bin sngl_mul[xor_op=>mul_op]                       38          1          -    Covered              
#         bin sngl_mul[and_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[add_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[no_op=>mul_op]                        50          1          -    Covered              
#         bin mul_sngl[mul_op=>xor_op]                       48          1          -    Covered              
#         bin mul_sngl[mul_op=>and_op]                       30          1          -    Covered              
#         bin mul_sngl[mul_op=>add_op]                       38          1          -    Covered              
#         bin mul_sngl[mul_op=>no_op]                        22          1          -    Covered              
#         bin twoops[add_op[*2]]                            308          1          -    Covered              
#         bin twoops[no_op[*2]]                             116          1          -    Covered              
#         bin manymult                                     1006          1          -    Covered              
#  TYPE /tinyalu_pkg/coverage/zeros_or_ones_on_ops      100.00%        100          -    Covered              
#     covered/total bins:                                    19         19          -                      
#     missing/total bins:                                     0         19          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint all_ops                                100.00%        100          -    Covered              
#         covered/total bins:                                 4          4          -                      
#         missing/total bins:                                 0          4          -                      
#         % Hit:                                        100.00%        100          -                      
#         ignore_bin null_ops                              1362                     -    Occurred             
#         bin auto[add_op]                                  524          1          -    Covered              
#         bin auto[and_op]                                  452          1          -    Covered              
#         bin auto[xor_op]                                  516          1          -    Covered              
#         bin auto[mul_op]                                 1426          1          -    Covered              
#     Coverpoint a_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1192          1          -    Covered              
#         bin others                                       2054          1          -    Covered              
#         bin ones                                         1034          1          -    Covered              
#     Coverpoint b_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1094          1          -    Covered              
#         bin others                                       2240          1          -    Covered              
#         bin ones                                          946          1          -    Covered              
#     Cross op_00_FF                                    100.00%        100          -    Covered              
#         covered/total bins:                                 9          9          -                      
#         missing/total bins:                                 0          9          -                      
#         % Hit:                                        100.00%        100          -                      
#         Auto, Default and User Defined Bins:
#             bin add_00                                    204          1          -    Covered              
#             bin add_FF                                    240          1          -    Covered              
#             bin and_00                                    216          1          -    Covered              
#             bin and_FF                                    188          1          -    Covered              
#             bin xor_00                                    244          1          -    Covered              
#             bin xor_FF                                    244          1          -    Covered              
#             bin mul_00                                    728          1          -    Covered              
#             bin mul_FF                                    520          1          -    Covered              
#             bin mul_max                                    64          1          -    Covered              
#         Illegal and Ignore Bins:
#             ignore_bin others_only                        698                     -    Occurred             
# 
# COVERGROUP COVERAGE:
# ----------------------------------------------------------------------------------------------------------
# Covergroup                                             Metric       Goal       Bins    Status               
#                                                                                                          
# ----------------------------------------------------------------------------------------------------------
#  TYPE /tinyalu_pkg/coverage/op_cov                    100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#  Covergroup instance \/tinyalu_pkg::coverage::op_cov  
#                                                       100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin single_cycle[no_op]                           426          1          -    Covered              
#         bin single_cycle[add_op]                          524          1          -    Covered              
#         bin single_cycle[and_op]                          452          1          -    Covered              
#         bin single_cycle[xor_op]                          516          1          -    Covered              
#         bin single_cycle[rst_op]                          936          1          -    Covered              
#         bin multi_cycle                                  1426          1          -    Covered              
#         bin opn_rst[add_op=>rst_op]                        62          1          -    Covered              
#         bin opn_rst[no_op=>rst_op]                        118          1          -    Covered              
#         bin rst_opn[rst_op=>add_op]                        60          1          -    Covered              
#         bin rst_opn[rst_op=>no_op]                        128          1          -    Covered              
#         bin sngl_mul[xor_op=>mul_op]                       38          1          -    Covered              
#         bin sngl_mul[and_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[add_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[no_op=>mul_op]                        50          1          -    Covered              
#         bin mul_sngl[mul_op=>xor_op]                       48          1          -    Covered              
#         bin mul_sngl[mul_op=>and_op]                       30          1          -    Covered              
#         bin mul_sngl[mul_op=>add_op]                       38          1          -    Covered              
#         bin mul_sngl[mul_op=>no_op]                        22          1          -    Covered              
#         bin twoops[add_op[*2]]                            308          1          -    Covered              
#         bin twoops[no_op[*2]]                             116          1          -    Covered              
#         bin manymult                                     1006          1          -    Covered              
#  TYPE /tinyalu_pkg/coverage/zeros_or_ones_on_ops      100.00%        100          -    Covered              
#     covered/total bins:                                    19         19          -                      
#     missing/total bins:                                     0         19          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint all_ops                                100.00%        100          -    Covered              
#         covered/total bins:                                 4          4          -                      
#         missing/total bins:                                 0          4          -                      
#         % Hit:                                        100.00%        100          -                      
#         ignore_bin null_ops                              1362                     -    Occurred             
#         bin auto[add_op]                                  524          1          -    Covered              
#         bin auto[and_op]                                  452          1          -    Covered              
#         bin auto[xor_op]                                  516          1          -    Covered              
#         bin auto[mul_op]                                 1426          1          -    Covered              
#     Coverpoint a_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1192          1          -    Covered              
#         bin others                                       2054          1          -    Covered              
#         bin ones                                         1034          1          -    Covered              
#     Coverpoint b_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1094          1          -    Covered              
#         bin others                                       2240          1          -    Covered              
#         bin ones                                          946          1          -    Covered              
#     Cross op_00_FF                                    100.00%        100          -    Covered              
#         covered/total bins:                                 9          9          -                      
#         missing/total bins:                                 0          9          -                      
#         % Hit:                                        100.00%        100          -                      
#         Auto, Default and User Defined Bins:
#             bin add_00                                    204          1          -    Covered              
#             bin add_FF                                    240          1          -    Covered              
#             bin and_00                                    216          1          -    Covered              
#             bin and_FF                                    188          1          -    Covered              
#             bin xor_00                                    244          1          -    Covered              
#             bin xor_FF                                    244          1          -    Covered              
#             bin mul_00                                    728          1          -    Covered              
#             bin mul_FF                                    520          1          -    Covered              
#             bin mul_max                                    64          1          -    Covered              
#         Illegal and Ignore Bins:
#             ignore_bin others_only                        698                     -    Occurred             
# 
# TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 2
# 
# Total Coverage By Instance (filtered view): 100.00%
# 
# End time: 15:27:29 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
add wave -position insertpoint  \
sim:/top/bfm/A \
sim:/top/bfm/B \
sim:/top/bfm/clk \
sim:/top/bfm/reset_n \
sim:/top/bfm/op \
sim:/top/bfm/start \
sim:/top/bfm/done \
sim:/top/bfm/result \
sim:/top/bfm/op_set
# Causality operation skipped due to absence of debug database file
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
quit -sim
# End time: 15:36:38 on Dec 19,2023, Elapsed time: 0:09:27
# Errors: 759, Warnings: 2

cd ../12_UVM_Components
do run.do
# Model Technology ModelSim SE-64 vcom 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 15:36:50 on Dec 19,2023
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 15:36:50 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 15:36:50 on Dec 19,2023
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# ** Note: (vlog-2286) tinyalu_pkg.sv(18): Using implicit +incdir+D:/Xilinx/modelsim/uvm-1.1d/../verilog_src/uvm-1.1d/src from import uvm_pkg
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 15:36:50 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vopt 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 15:36:50 on Dec 19,2023
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# -- Importing package tinyalu_pkg
# -- Loading interface tinyalu_bfm
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# -- Loading package mtiUvm.questa_uvm_pkg
# Optimizing 9 design-units (inlining 0/2 module instances, 0/3 architecture instances):
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# -- Optimizing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)(fast)
# -- Optimizing package mtiUvm.questa_uvm_pkg(fast)
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# Optimized design name is top_optimized
# End time: 15:36:52 on Dec 19,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
# vsim top_optimized -coverage "+UVM_TESTNAME=random_test" 
# Start time: 15:36:52 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
# 1
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test random_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 42800: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 42800 ns  Iteration: 55  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# coverage exclude -src ../../tinyalu_dut/single_cycle_add_and_xor.vhd -scope /top/DUT/add_and_xor -line 49 -code b
# ** Warning: (vsim-4036) The 'coverage exclude' command had no effect on some/all objects because
# no matching coverage data was found.
# 
# End time: 15:37:14 on Dec 19,2023, Elapsed time: 0:00:22
# Errors: 749, Warnings: 1
# vsim top_optimized -coverage "+UVM_TESTNAME=add_test" 
# Start time: 15:37:15 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
# 1
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test add_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 42800: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 42800 ns  Iteration: 55  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# coverage exclude -src ../../tinyalu_dut/single_cycle_add_and_xor.vhd -scope /top/DUT/add_and_xor -line 49 -code b
# ** Warning: (vsim-4036) The 'coverage exclude' command had no effect on some/all objects because
# no matching coverage data was found.
# 
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Start time: 15:37:35 on Dec 19,2023
# vcover merge tinyalu.ucdb random_test.ucdb add_test.ucdb 
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Merging file random_test.ucdb
# Merging file add_test.ucdb
# Writing merged result to tinyalu.ucdb
# 
# End time: 15:37:35 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Start time: 15:37:35 on Dec 19,2023
# vcover report tinyalu.ucdb -cvg -details 
# Coverage Report by instance with details
# 
# =================================================================================
# === Instance: /tinyalu_pkg
# === Design Unit: work.tinyalu_pkg
# =================================================================================
# 
# Covergroup Coverage:
#     Covergroups                      2        na        na   100.00%
#         Coverpoints/Crosses          5        na        na        na
#             Covergroup Bins         40        40         0   100.00%
# ----------------------------------------------------------------------------------------------------------
# Covergroup                                             Metric       Goal       Bins    Status               
#                                                                                                          
# ----------------------------------------------------------------------------------------------------------
#  TYPE /tinyalu_pkg/coverage/op_cov                    100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#  Covergroup instance \/tinyalu_pkg::coverage::op_cov  
#                                                       100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin single_cycle[no_op]                           426          1          -    Covered              
#         bin single_cycle[add_op]                          524          1          -    Covered              
#         bin single_cycle[and_op]                          452          1          -    Covered              
#         bin single_cycle[xor_op]                          516          1          -    Covered              
#         bin single_cycle[rst_op]                          936          1          -    Covered              
#         bin multi_cycle                                  1426          1          -    Covered              
#         bin opn_rst[add_op=>rst_op]                        62          1          -    Covered              
#         bin opn_rst[no_op=>rst_op]                        118          1          -    Covered              
#         bin rst_opn[rst_op=>add_op]                        60          1          -    Covered              
#         bin rst_opn[rst_op=>no_op]                        128          1          -    Covered              
#         bin sngl_mul[xor_op=>mul_op]                       38          1          -    Covered              
#         bin sngl_mul[and_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[add_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[no_op=>mul_op]                        50          1          -    Covered              
#         bin mul_sngl[mul_op=>xor_op]                       48          1          -    Covered              
#         bin mul_sngl[mul_op=>and_op]                       30          1          -    Covered              
#         bin mul_sngl[mul_op=>add_op]                       38          1          -    Covered              
#         bin mul_sngl[mul_op=>no_op]                        22          1          -    Covered              
#         bin twoops[add_op[*2]]                            308          1          -    Covered              
#         bin twoops[no_op[*2]]                             116          1          -    Covered              
#         bin manymult                                     1006          1          -    Covered              
#  TYPE /tinyalu_pkg/coverage/zeros_or_ones_on_ops      100.00%        100          -    Covered              
#     covered/total bins:                                    19         19          -                      
#     missing/total bins:                                     0         19          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint all_ops                                100.00%        100          -    Covered              
#         covered/total bins:                                 4          4          -                      
#         missing/total bins:                                 0          4          -                      
#         % Hit:                                        100.00%        100          -                      
#         ignore_bin null_ops                              1362                     -    Occurred             
#         bin auto[add_op]                                  524          1          -    Covered              
#         bin auto[and_op]                                  452          1          -    Covered              
#         bin auto[xor_op]                                  516          1          -    Covered              
#         bin auto[mul_op]                                 1426          1          -    Covered              
#     Coverpoint a_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1192          1          -    Covered              
#         bin others                                       2054          1          -    Covered              
#         bin ones                                         1034          1          -    Covered              
#     Coverpoint b_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1094          1          -    Covered              
#         bin others                                       2240          1          -    Covered              
#         bin ones                                          946          1          -    Covered              
#     Cross op_00_FF                                    100.00%        100          -    Covered              
#         covered/total bins:                                 9          9          -                      
#         missing/total bins:                                 0          9          -                      
#         % Hit:                                        100.00%        100          -                      
#         Auto, Default and User Defined Bins:
#             bin add_00                                    204          1          -    Covered              
#             bin add_FF                                    240          1          -    Covered              
#             bin and_00                                    216          1          -    Covered              
#             bin and_FF                                    188          1          -    Covered              
#             bin xor_00                                    244          1          -    Covered              
#             bin xor_FF                                    244          1          -    Covered              
#             bin mul_00                                    728          1          -    Covered              
#             bin mul_FF                                    520          1          -    Covered              
#             bin mul_max                                    64          1          -    Covered              
#         Illegal and Ignore Bins:
#             ignore_bin others_only                        698                     -    Occurred             
# 
# COVERGROUP COVERAGE:
# ----------------------------------------------------------------------------------------------------------
# Covergroup                                             Metric       Goal       Bins    Status               
#                                                                                                          
# ----------------------------------------------------------------------------------------------------------
#  TYPE /tinyalu_pkg/coverage/op_cov                    100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#  Covergroup instance \/tinyalu_pkg::coverage::op_cov  
#                                                       100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin single_cycle[no_op]                           426          1          -    Covered              
#         bin single_cycle[add_op]                          524          1          -    Covered              
#         bin single_cycle[and_op]                          452          1          -    Covered              
#         bin single_cycle[xor_op]                          516          1          -    Covered              
#         bin single_cycle[rst_op]                          936          1          -    Covered              
#         bin multi_cycle                                  1426          1          -    Covered              
#         bin opn_rst[add_op=>rst_op]                        62          1          -    Covered              
#         bin opn_rst[no_op=>rst_op]                        118          1          -    Covered              
#         bin rst_opn[rst_op=>add_op]                        60          1          -    Covered              
#         bin rst_opn[rst_op=>no_op]                        128          1          -    Covered              
#         bin sngl_mul[xor_op=>mul_op]                       38          1          -    Covered              
#         bin sngl_mul[and_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[add_op=>mul_op]                       28          1          -    Covered              
#         bin sngl_mul[no_op=>mul_op]                        50          1          -    Covered              
#         bin mul_sngl[mul_op=>xor_op]                       48          1          -    Covered              
#         bin mul_sngl[mul_op=>and_op]                       30          1          -    Covered              
#         bin mul_sngl[mul_op=>add_op]                       38          1          -    Covered              
#         bin mul_sngl[mul_op=>no_op]                        22          1          -    Covered              
#         bin twoops[add_op[*2]]                            308          1          -    Covered              
#         bin twoops[no_op[*2]]                             116          1          -    Covered              
#         bin manymult                                     1006          1          -    Covered              
#  TYPE /tinyalu_pkg/coverage/zeros_or_ones_on_ops      100.00%        100          -    Covered              
#     covered/total bins:                                    19         19          -                      
#     missing/total bins:                                     0         19          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint all_ops                                100.00%        100          -    Covered              
#         covered/total bins:                                 4          4          -                      
#         missing/total bins:                                 0          4          -                      
#         % Hit:                                        100.00%        100          -                      
#         ignore_bin null_ops                              1362                     -    Occurred             
#         bin auto[add_op]                                  524          1          -    Covered              
#         bin auto[and_op]                                  452          1          -    Covered              
#         bin auto[xor_op]                                  516          1          -    Covered              
#         bin auto[mul_op]                                 1426          1          -    Covered              
#     Coverpoint a_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1192          1          -    Covered              
#         bin others                                       2054          1          -    Covered              
#         bin ones                                         1034          1          -    Covered              
#     Coverpoint b_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1094          1          -    Covered              
#         bin others                                       2240          1          -    Covered              
#         bin ones                                          946          1          -    Covered              
#     Cross op_00_FF                                    100.00%        100          -    Covered              
#         covered/total bins:                                 9          9          -                      
#         missing/total bins:                                 0          9          -                      
#         % Hit:                                        100.00%        100          -                      
#         Auto, Default and User Defined Bins:
#             bin add_00                                    204          1          -    Covered              
#             bin add_FF                                    240          1          -    Covered              
#             bin and_00                                    216          1          -    Covered              
#             bin and_FF                                    188          1          -    Covered              
#             bin xor_00                                    244          1          -    Covered              
#             bin xor_FF                                    244          1          -    Covered              
#             bin mul_00                                    728          1          -    Covered              
#             bin mul_FF                                    520          1          -    Covered              
#             bin mul_max                                    64          1          -    Covered              
#         Illegal and Ignore Bins:
#             ignore_bin others_only                        698                     -    Occurred             
# 
# TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 2
# 
# Total Coverage By Instance (filtered view): 100.00%
# 
# End time: 15:37:35 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0




quit -sim
# End time: 17:36:47 on Dec 19,2023, Elapsed time: 1:59:32
# Errors: 848, Warnings: 1
cd ../13_UVM_Environments
ls
# dut.f   tb_classes      tinyalu_macros.svh    
# run.do  tinyalu_bfm.sv  tinyalu_pkg.sv        
# tb.f    tinyalu_dut     top.sv                
do run.do
# Model Technology ModelSim SE-64 vcom 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 17:37:17 on Dec 19,2023
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 17:37:17 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 17:37:18 on Dec 19,2023
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# ** Note: (vlog-2286) tinyalu_pkg.sv(18): Using implicit +incdir+D:/Xilinx/modelsim/uvm-1.1d/../verilog_src/uvm-1.1d/src from import uvm_pkg
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 17:37:18 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vopt 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 17:37:18 on Dec 19,2023
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# -- Importing package tinyalu_pkg
# -- Loading interface tinyalu_bfm
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# -- Loading package mtiUvm.questa_uvm_pkg
# Optimizing 9 design-units (inlining 0/2 module instances, 0/3 architecture instances):
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# -- Optimizing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)(fast)
# -- Optimizing package mtiUvm.questa_uvm_pkg(fast)
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# Optimized design name is top_optimized
# End time: 17:37:20 on Dec 19,2023, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
# vsim top_optimized -coverage "+UVM_TESTNAME=random_test" 
# Start time: 17:37:20 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
# 1
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test random_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 42800: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 42800 ns  Iteration: 56  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# coverage exclude -src ../../tinyalu_dut/single_cycle_add_and_xor.vhd -scope /top/DUT/add_and_xor -line 49 -code b
# ** Warning: (vsim-4036) The 'coverage exclude' command had no effect on some/all objects because
# no matching coverage data was found.
# 
# End time: 17:37:40 on Dec 19,2023, Elapsed time: 0:00:20
# Errors: 798, Warnings: 1
# vsim top_optimized -coverage "+UVM_TESTNAME=add_test" 
# Start time: 17:37:41 on Dec 19,2023
# Loading sv_std.std
# Loading work.tinyalu_bfm(fast)
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
# 1
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test add_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 40540: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 40540 ns  Iteration: 56  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# coverage exclude -src ../../tinyalu_dut/single_cycle_add_and_xor.vhd -scope /top/DUT/add_and_xor -line 49 -code b
# ** Warning: (vsim-4036) The 'coverage exclude' command had no effect on some/all objects because
# no matching coverage data was found.
# 
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Start time: 17:37:58 on Dec 19,2023
# vcover merge tinyalu.ucdb random_test.ucdb add_test.ucdb 
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Merging file random_test.ucdb
# Merging file add_test.ucdb
# Writing merged result to tinyalu.ucdb
# 
# End time: 17:37:58 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vcover 2019.2 Coverage Utility 2019.04 Apr 17 2019
# Start time: 17:37:58 on Dec 19,2023
# vcover report tinyalu.ucdb -cvg -details 
# Coverage Report by instance with details
# 
# =================================================================================
# === Instance: /tinyalu_pkg
# === Design Unit: work.tinyalu_pkg
# =================================================================================
# 
# Covergroup Coverage:
#     Covergroups                      2        na        na   100.00%
#         Coverpoints/Crosses          5        na        na        na
#             Covergroup Bins         40        40         0   100.00%
# ----------------------------------------------------------------------------------------------------------
# Covergroup                                             Metric       Goal       Bins    Status               
#                                                                                                          
# ----------------------------------------------------------------------------------------------------------
#  TYPE /tinyalu_pkg/coverage/op_cov                    100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#  Covergroup instance \/tinyalu_pkg::coverage::op_cov  
#                                                       100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin single_cycle[no_op]                           216          1          -    Covered              
#         bin single_cycle[add_op]                         2286          1          -    Covered              
#         bin single_cycle[and_op]                          226          1          -    Covered              
#         bin single_cycle[xor_op]                          258          1          -    Covered              
#         bin single_cycle[rst_op]                          468          1          -    Covered              
#         bin multi_cycle                                   713          1          -    Covered              
#         bin opn_rst[add_op=>rst_op]                        31          1          -    Covered              
#         bin opn_rst[no_op=>rst_op]                         59          1          -    Covered              
#         bin rst_opn[rst_op=>add_op]                        30          1          -    Covered              
#         bin rst_opn[rst_op=>no_op]                         64          1          -    Covered              
#         bin sngl_mul[xor_op=>mul_op]                       19          1          -    Covered              
#         bin sngl_mul[and_op=>mul_op]                       14          1          -    Covered              
#         bin sngl_mul[add_op=>mul_op]                       14          1          -    Covered              
#         bin sngl_mul[no_op=>mul_op]                        25          1          -    Covered              
#         bin mul_sngl[mul_op=>xor_op]                       24          1          -    Covered              
#         bin mul_sngl[mul_op=>and_op]                       15          1          -    Covered              
#         bin mul_sngl[mul_op=>add_op]                       19          1          -    Covered              
#         bin mul_sngl[mul_op=>no_op]                        11          1          -    Covered              
#         bin twoops[add_op[*2]]                           2177          1          -    Covered              
#         bin twoops[no_op[*2]]                              60          1          -    Covered              
#         bin manymult                                      503          1          -    Covered              
#  TYPE /tinyalu_pkg/coverage/zeros_or_ones_on_ops      100.00%        100          -    Covered              
#     covered/total bins:                                    19         19          -                      
#     missing/total bins:                                     0         19          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint all_ops                                100.00%        100          -    Covered              
#         covered/total bins:                                 4          4          -                      
#         missing/total bins:                                 0          4          -                      
#         % Hit:                                        100.00%        100          -                      
#         ignore_bin null_ops                               684                     -    Occurred             
#         bin auto[add_op]                                 2286          1          -    Covered              
#         bin auto[and_op]                                  226          1          -    Covered              
#         bin auto[xor_op]                                  258          1          -    Covered              
#         bin auto[mul_op]                                  713          1          -    Covered              
#     Coverpoint a_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1105          1          -    Covered              
#         bin others                                       2019          1          -    Covered              
#         bin ones                                         1043          1          -    Covered              
#     Coverpoint b_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1056          1          -    Covered              
#         bin others                                       2114          1          -    Covered              
#         bin ones                                          997          1          -    Covered              
#     Cross op_00_FF                                    100.00%        100          -    Covered              
#         covered/total bins:                                 9          9          -                      
#         missing/total bins:                                 0          9          -                      
#         % Hit:                                        100.00%        100          -                      
#         Auto, Default and User Defined Bins:
#             bin add_00                                    990          1          -    Covered              
#             bin add_FF                                   1008          1          -    Covered              
#             bin and_00                                    108          1          -    Covered              
#             bin and_FF                                     94          1          -    Covered              
#             bin xor_00                                    122          1          -    Covered              
#             bin xor_FF                                    122          1          -    Covered              
#             bin mul_00                                    364          1          -    Covered              
#             bin mul_FF                                    260          1          -    Covered              
#             bin mul_max                                    32          1          -    Covered              
#         Illegal and Ignore Bins:
#             ignore_bin others_only                        853                     -    Occurred             
# 
# COVERGROUP COVERAGE:
# ----------------------------------------------------------------------------------------------------------
# Covergroup                                             Metric       Goal       Bins    Status               
#                                                                                                          
# ----------------------------------------------------------------------------------------------------------
#  TYPE /tinyalu_pkg/coverage/op_cov                    100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#  Covergroup instance \/tinyalu_pkg::coverage::op_cov  
#                                                       100.00%        100          -    Covered              
#     covered/total bins:                                    21         21          -                      
#     missing/total bins:                                     0         21          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint op_set                                 100.00%        100          -    Covered              
#         covered/total bins:                                21         21          -                      
#         missing/total bins:                                 0         21          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin single_cycle[no_op]                           216          1          -    Covered              
#         bin single_cycle[add_op]                         2286          1          -    Covered              
#         bin single_cycle[and_op]                          226          1          -    Covered              
#         bin single_cycle[xor_op]                          258          1          -    Covered              
#         bin single_cycle[rst_op]                          468          1          -    Covered              
#         bin multi_cycle                                   713          1          -    Covered              
#         bin opn_rst[add_op=>rst_op]                        31          1          -    Covered              
#         bin opn_rst[no_op=>rst_op]                         59          1          -    Covered              
#         bin rst_opn[rst_op=>add_op]                        30          1          -    Covered              
#         bin rst_opn[rst_op=>no_op]                         64          1          -    Covered              
#         bin sngl_mul[xor_op=>mul_op]                       19          1          -    Covered              
#         bin sngl_mul[and_op=>mul_op]                       14          1          -    Covered              
#         bin sngl_mul[add_op=>mul_op]                       14          1          -    Covered              
#         bin sngl_mul[no_op=>mul_op]                        25          1          -    Covered              
#         bin mul_sngl[mul_op=>xor_op]                       24          1          -    Covered              
#         bin mul_sngl[mul_op=>and_op]                       15          1          -    Covered              
#         bin mul_sngl[mul_op=>add_op]                       19          1          -    Covered              
#         bin mul_sngl[mul_op=>no_op]                        11          1          -    Covered              
#         bin twoops[add_op[*2]]                           2177          1          -    Covered              
#         bin twoops[no_op[*2]]                              60          1          -    Covered              
#         bin manymult                                      503          1          -    Covered              
#  TYPE /tinyalu_pkg/coverage/zeros_or_ones_on_ops      100.00%        100          -    Covered              
#     covered/total bins:                                    19         19          -                      
#     missing/total bins:                                     0         19          -                      
#     % Hit:                                            100.00%        100          -                      
#     Coverpoint all_ops                                100.00%        100          -    Covered              
#         covered/total bins:                                 4          4          -                      
#         missing/total bins:                                 0          4          -                      
#         % Hit:                                        100.00%        100          -                      
#         ignore_bin null_ops                               684                     -    Occurred             
#         bin auto[add_op]                                 2286          1          -    Covered              
#         bin auto[and_op]                                  226          1          -    Covered              
#         bin auto[xor_op]                                  258          1          -    Covered              
#         bin auto[mul_op]                                  713          1          -    Covered              
#     Coverpoint a_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1105          1          -    Covered              
#         bin others                                       2019          1          -    Covered              
#         bin ones                                         1043          1          -    Covered              
#     Coverpoint b_leg                                  100.00%        100          -    Covered              
#         covered/total bins:                                 3          3          -                      
#         missing/total bins:                                 0          3          -                      
#         % Hit:                                        100.00%        100          -                      
#         bin zeros                                        1056          1          -    Covered              
#         bin others                                       2114          1          -    Covered              
#         bin ones                                          997          1          -    Covered              
#     Cross op_00_FF                                    100.00%        100          -    Covered              
#         covered/total bins:                                 9          9          -                      
#         missing/total bins:                                 0          9          -                      
#         % Hit:                                        100.00%        100          -                      
#         Auto, Default and User Defined Bins:
#             bin add_00                                    990          1          -    Covered              
#             bin add_FF                                   1008          1          -    Covered              
#             bin and_00                                    108          1          -    Covered              
#             bin and_FF                                     94          1          -    Covered              
#             bin xor_00                                    122          1          -    Covered              
#             bin xor_FF                                    122          1          -    Covered              
#             bin mul_00                                    364          1          -    Covered              
#             bin mul_FF                                    260          1          -    Covered              
#             bin mul_max                                    32          1          -    Covered              
#         Illegal and Ignore Bins:
#             ignore_bin others_only                        853                     -    Occurred             
# 
# TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 2
# 
# Total Coverage By Instance (filtered view): 100.00%
# 
# End time: 17:37:58 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# **** Error: ContextQ cmd: namespace inscope ::Flatlist {::.main_pane.instance.interior.cs.body.list UpdateFlatList} sim
# ****        Bad sequence in.main_pane.instance.interior.cs.body.list.lwchildsite.clipper.canvas.sfchildsite.tree, aborting query. (1)
# Bad sequence in.main_pane.instance.interior.cs.body.list.lwchildsite.clipper.canvas.sfchildsite.tree, aborting query. (1)
#     while executing
# "$itk_component(tree) insertquery end """
#     (object "::.main_pane.instance.interior.cs.body.list" method "::vsimwidgets::Hierarchy::requery" body line 3)
#     invoked from within
# "requery"
#     (object "::.main_pane.instance.interior.cs.body.list" method "::Flatlist::UpdateFlatList" body line 20)
#     invoked from within
# "::.main_pane.instance.interior.cs.body.list UpdateFlatList sim"
#     (in namespace inscope "::Flatlist" script line 1)
#     invoked from within
# "namespace inscope ::Flatlist {::.main_pane.instance.interior.cs.body.list UpdateFlatList} sim"
#     ("eval" body line 1)
#     invoked from within
# "eval $p $tankNamespace "
quit -sim
# End time: 18:38:14 on Dec 19,2023, Elapsed time: 1:00:33
# Errors: 1474, Warnings: 1
cd ../15_Talking_Objects
ls
# 01_No_Analysis_Port  02_With_Analysis_Port    
cd 01_No_Analysis_Port
ls
#dice_test.svh#  coverage.svh  dice_roller.svh  histogram.svh  top.sv  
# average.svh      dice_pkg.sv   dice_test.svh    run.do                 
do run.do
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 18:38:39 on Dec 19,2023
# vlog -reportprogress 300 dice_pkg.sv 
# -- Compiling package dice_pkg
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# ** Note: (vlog-2286) dice_pkg.sv(18): Using implicit +incdir+D:/Xilinx/modelsim/uvm-1.1d/../verilog_src/uvm-1.1d/src from import uvm_pkg
# 
# Top level modules:
# 	--none--
# End time: 18:38:40 on Dec 19,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim SE-64 vlog 2019.2 Compiler 2019.04 Apr 17 2019
# Start time: 18:38:40 on Dec 19,2023
# vlog -reportprogress 300 top.sv 
# -- Compiling module top
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# ** Note: (vlog-2286) top.sv(18): Using implicit +incdir+D:/Xilinx/modelsim/uvm-1.1d/../verilog_src/uvm-1.1d/src from import uvm_pkg
# -- Importing package dice_pkg
# 
# Top level modules:
# 	top
# End time: 18:38:40 on Dec 19,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -c top 
# Start time: 18:38:40 on Dec 19,2023
# ** Note: (vsim-3812) Design is being optimized...
# Loading sv_std.std
# Loading mtiUvm.uvm_pkg
# Loading work.dice_pkg(fast)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.top(fast)
# Loading D:/Xilinx/modelsim/uvm-1.1d\win64\uvm_dpi.dll
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(277) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(278) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test dice_test...
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1267) @ 0: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# DICE AVERAGE: 6.7
# 
# COVERAGE: 91% 
# 
#  2: #
#  3: ###
#  4: #
#  5: #
#  6: #
#  7: #####
#  8: ####
#  9: #
# 10: ##
# 11: 
# 12: #
# 
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 0 ns  Iteration: 216  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at D:/Xilinx/modelsim/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
